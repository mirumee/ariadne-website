"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["19731"],{88551:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>a,toc:()=>d,default:()=>u,metadata:()=>i,assets:()=>s,contentTitle:()=>o});var i=JSON.parse('{"id":"custom-operation-builder","title":"Custom operation builder","description":"The custom operation builder allows you to create complex GraphQL queries in a structured and intuitive way.","source":"@site/docs/client/05-custom-operation-builder.md","sourceDirName":".","slug":"/custom-operation-builder","permalink":"/client/next/custom-operation-builder","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Custom operation builder"},"sidebar":"tutorialSidebar","previous":{"title":"Step-by-step example","permalink":"/client/next/step-by-step-example"},"next":{"title":"Standard plugins","permalink":"/client/next/plugins/standard-plugins"}}'),r=t(74848),l=t(84429);let a={title:"Custom operation builder"},o="Custom operation builder",s={},d=[{value:"Example Code",id:"example-code",level:2},{value:"Explanation",id:"explanation",level:2},{value:"Example pyproject.toml configuration.",id:"example-pyprojecttoml-configuration",level:2}];function c(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"custom-operation-builder",children:"Custom operation builder"})}),"\n",(0,r.jsx)(n.p,{children:"The custom operation builder allows you to create complex GraphQL queries in a structured and intuitive way."}),"\n",(0,r.jsx)(n.h2,{id:"example-code",children:"Example Code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import asyncio\nfrom graphql_client import Client\nfrom graphql_client.custom_fields import (\n    ProductFields,\n    ProductTranslatableContentFields,\n    ProductTranslationFields,\n    TranslatableItemConnectionFields,\n    TranslatableItemEdgeFields,\n)\nfrom graphql_client.custom_queries import Query\nfrom graphql_client.enums import LanguageCodeEnum, TranslatableKinds\n\n\nasync def get_products():\n    # Create a client instance with the specified URL and headers\n    client = Client(\n        url="https://saleor.cloud/graphql/",\n        headers={"authorization": "bearer ..."},\n    )\n\n    # Build the queries\n    product_query = Query.product(id="...", channel="channel-uk").fields(\n        ProductFields.id,\n        ProductFields.name,\n    )\n\n    translation_query = Query.translations(kind=TranslatableKinds.PRODUCT, first=10).fields(\n        TranslatableItemConnectionFields.edges().alias("aliased_edges").fields(\n            TranslatableItemEdgeFields.node.on(\n                "ProductTranslatableContent",\n                ProductTranslatableContentFields.id,\n                ProductTranslatableContentFields.product_id,\n                ProductTranslatableContentFields.name,\n            )\n        )\n    )\n\n    # Execute the queries with an operation name\n    response = await client.query(\n        product_query,\n        translation_query,\n        operation_name="get_products",\n    )\n\n    print(response)\n\n# Run the async function\nasyncio.run(get_products())\n'})}),"\n",(0,r.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Building the Product Query:","\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:'The Query.product(id="...", channel="channel-uk") initiates a query for a product with the specified ID and channel.'}),"\n",(0,r.jsx)(n.li,{children:".fields(ProductFields.id, ProductFields.name) specifies the fields to retrieve for the product: id and name."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Building the Translation Query:","\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The Query.translations(kind=TranslatableKinds.PRODUCT, first=10) initiates a query for product translations."}),"\n",(0,r.jsx)(n.li,{children:".fields(...) specifies the fields to retrieve for the translations."}),"\n",(0,r.jsx)(n.li,{children:'.alias("aliased_edges") renames the edges field to aliased_edges.'}),"\n",(0,r.jsx)(n.li,{children:'.on("ProductTranslatableContent", ...) specifies the fields to retrieve if the node is of type ProductTranslatableContent: id, product_id, and name.'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Executing the Queries:","\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:'The client.query(...) method is called with the built queries and an operation name "get_products".'}),"\n",(0,r.jsx)(n.li,{children:"This method sends the queries to the server and retrieves the response."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-pyprojecttoml-configuration",children:"Example pyproject.toml configuration."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"Note: queries_path is optional when enable_custom_operations is set to true"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[tool.ariadne-codegen]\nschema_path = "schema.graphql"\ninclude_comments = "none"\ntarget_package_name = "example_client"\nenable_custom_operations = true\n'})})]})}function u(e={}){let{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},84429:function(e,n,t){t.d(n,{R:()=>a,x:()=>o});var i=t(96540);let r={},l=i.createContext(r);function a(e){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);