"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["84818"],{66224:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>o,toc:()=>l,default:()=>h,metadata:()=>r,assets:()=>c,contentTitle:()=>a});var r=JSON.parse('{"id":"documenting-schema","title":"Documenting schema","description":"The GraphQL specification includes two features that make documentation and schema exploration easy and powerful. Those features are descriptions and introspection queries.","source":"@site/server_versioned_docs/version-0.18/documenting-schema.md","sourceDirName":".","slug":"/documenting-schema","permalink":"/server/0.18/documenting-schema","draft":false,"unlisted":false,"tags":[],"version":"0.18","frontMatter":{"id":"documenting-schema","title":"Documenting schema"},"sidebar":"tutorialSidebar","previous":{"title":"File uploads","permalink":"/server/0.18/file-uploads"},"next":{"title":"Modularization","permalink":"/server/0.18/modularization"}}'),i=s(74848),t=s(84429);let o={id:"documenting-schema",title:"Documenting schema"},a,c={},l=[{value:"GraphQL explorers",id:"graphql-explorers",level:2},{value:"Descriptions",id:"descriptions",level:2},{value:"Introspection Queries",id:"introspection-queries",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The GraphQL specification includes two features that make documentation and schema exploration easy and powerful. Those features are descriptions and introspection queries."}),"\n",(0,i.jsx)(n.p,{children:"There is now a rich ecosystem of tools built on top of those features. Some of which include IDE plugins, code generators and interactive API explorers."}),"\n",(0,i.jsx)(n.h2,{id:"graphql-explorers",children:"GraphQL explorers"}),"\n",(0,i.jsx)(n.p,{children:"Popular GraphQL explorers allow developers and clients to explore the contents of your schema:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"GraphQL Playground example",src:s(18408).A+"",width:"1320",height:"646"})}),"\n",(0,i.jsx)(n.h2,{id:"descriptions",children:"Descriptions"}),"\n",(0,i.jsxs)(n.p,{children:["The GraphQL schema definition language supports a special ",(0,i.jsx)(n.a,{href:"https://spec.graphql.org/June2018/#sec-Descriptions",children:"description syntax"}),". This allows you to provide additional context and information alongside your type definitions, which will be accessible both to developers and API consumers."]}),"\n",(0,i.jsxs)(n.p,{children:["GraphQL descriptions are declared using a format that feels very similar to Python's ",(0,i.jsx)(n.code,{children:"docstrings"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'query = \'\'\'\n    """\n    Search results must always include a summary and a URL for the resource.\n    """\n    interface SearchResult {\n        "A brief summary of the search result."\n        summary: String!\n\n        "The URL for the resource the search result is describing."\n        url: String!\n    }\n\'\'\'\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Note that GraphQL descriptions also support Markdown (as specified in ",(0,i.jsx)(n.a,{href:"https://commonmark.org/",children:"CommonMark"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"query = '''\n    \"\"\"\n    Search results **must** always include a summary and a\n    [URL](https://en.wikipedia.org/wiki/URL) for the resource.\n    \"\"\"\n    interface SearchResult {\n        # ...\n    }\n'''\n"})}),"\n",(0,i.jsx)(n.h2,{id:"introspection-queries",children:"Introspection Queries"}),"\n",(0,i.jsxs)(n.p,{children:["The GraphQL specification defines a programmatic way to learn about a server's schema and documentation. This is called ",(0,i.jsx)(n.a,{href:"https://graphql.org/learn/introspection/",children:"introspection"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Query"})," type in a GraphQL schema includes special introspection fields (prefixed with a double underscore) which allow a user or application to ask for information about the schema itself:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"query IntrospectionQuery {\n  __schema {\n    types {\n      kind\n      name\n      description\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"The result of the above query might look like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "__schema": {\n    "types": [\n      {\n        "kind": "OBJECT",\n        "name": "Query",\n        "description": "A simple GraphQL schema which is well described."\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Tools like GraphQL Playground use introspection queries internally to provide the live, dynamic experiences they do."}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},18408:function(e,n,s){s.d(n,{A:()=>r});let r=s.p+"assets/images/graphql-playground-example-6a7d793c7c73ec24072e018db095ace7.jpg"},84429:function(e,n,s){s.d(n,{R:()=>o,x:()=>a});var r=s(96540);let i={},t=r.createContext(i);function o(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);