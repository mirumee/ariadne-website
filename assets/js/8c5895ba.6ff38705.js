"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["55803"],{14113:function(e,n,s){s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var r=s(53176),t=s(74848),i=s(84429);let o={title:"Ariadne 0.7.0"},a,d={authorsImageUrls:[]},c=[{value:"Custom schema directives",id:"custom-schema-directives",level:2},{value:"Synchronous extensions",id:"synchronous-extensions",level:2},{value:"Hacktoberfest",id:"hacktoberfest",level:2},{value:"GraphQL federations",id:"graphql-federations",level:2},{value:"CHANGELOG",id:"changelog",level:2}];function l(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Ariadne 0.7 brings support for custom schema directives and synchronous extensions."}),"\n",(0,t.jsx)(n.h2,{id:"custom-schema-directives",children:"Custom schema directives"}),"\n",(0,t.jsxs)(n.p,{children:["In SDL, schema directives act as annotations adding extra information and meaning to schema's items. Ariadne already supported the ",(0,t.jsx)(n.code,{children:"@deprecated"})," directive described by the specification and enabled developers to declare custom directives in schema with ",(0,t.jsx)(n.code,{children:"directive @example on"})," syntax, but until now there was no obvious and easy way for developers to implement behavior for those:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"directive @requireRole(role: Role!) on FIELD_DEFINITION\n\nenum Role {\n  USER\n  MODERATOR\n}\n\ntype Query {\n  reportedContent: [Posts!] @requireRole(role: MODERATOR)\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Ariadne 0.7 provides the ",(0,t.jsx)(n.a,{href:"/server/schema-directives",children:(0,t.jsx)(n.code,{children:"SchemaDirectiveVisitor"})})," type that is associated with specified annotation in schema by developer, and can be used to perform changes in the schema like wrapping annotated fields resolvers with custom one:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class RequireRoleSchemaDirective(SchemaDirectiveVisitor):\n    def visit_field_definition(self, field, object_type):\n        role = self.args.get("role")\n        original_resolver = field.resolve or default_field_resolver\n\n        def resolve_with_role_check(obj, info, **kwargs):\n            if role not in info.context["roles"]:\n                return None\n\n            return original_resolver(obj, info, **kwargs)\n\n        field.resolve = resolve_with_permission_check\n        return field\n'})}),"\n",(0,t.jsxs)(n.p,{children:["I'm also very happy to add that custom schema directives implementation is ",(0,t.jsx)(n.a,{href:"https://github.com/mirumee/ariadne/pull/222",children:"a contribution from Yasin Bahtiyar"}),". Thank you!"]}),"\n",(0,t.jsx)(n.h2,{id:"synchronous-extensions",children:"Synchronous extensions"}),"\n",(0,t.jsxs)(n.p,{children:["Ariadne 0.6 released with support for extensions, but those were only implemented for asynchronous servers (running with ASGI). Thanks to ",(0,t.jsx)(n.a,{href:"https://github.com/mirumee/ariadne/pull/239",children:"contribution by Daniel Rice"}),", Ariadne now also supports extensions in WSGI servers, and the documentation has been updated accordingly. We've also added synchronous versions of Apollo trace and OpenTracing extensions."]}),"\n",(0,t.jsxs)(n.p,{children:["We've also updated existing extensions API, making ",(0,t.jsx)(n.code,{children:"context"})," available to ",(0,t.jsx)(n.code,{children:"has_errors"})," and ",(0,t.jsx)(n.code,{children:"format"})," hooks."]}),"\n",(0,t.jsx)(n.h2,{id:"hacktoberfest",children:"Hacktoberfest"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://hacktoberfest.digitalocean.com/",children:"Hacktoberfest 2019"})," is underway, and we are participating! Make sure you check Ariadne's issue tracker for issues labeled with ",(0,t.jsx)(n.a,{href:"https://github.com/mirumee/ariadne/issues?q=is%3Aissue+is%3Aopen+label%3Ahacktoberfest",children:'"hacktoberfest"'})," if you want to help!"]}),"\n",(0,t.jsx)(n.h2,{id:"graphql-federations",children:"GraphQL federations"}),"\n",(0,t.jsxs)(n.p,{children:["We would like to use this opportunity to also give a shout out to Ales Zoulek, who has ",(0,t.jsx)(n.a,{href:"https://spectrum.chat/ariadne/general/graphql-federation-with-ariadne~bb5ba9a5-4a81-4d45-b0af-a0f7bfc758a5",children:"implemented GraphQL federations support for Ariadne"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Federations are latest hotness in the GraphQL world - they provide a way to combine multiple GraphQL APIs into one. We would love for Ariadne to provide out-of-the box support for this, but getting such a feature to a state when it can be included to library's codebase is a considerable task."}),"\n",(0,t.jsxs)(n.p,{children:["You can help! ",(0,t.jsx)(n.a,{href:"https://github.com/pantheon-systems/ariadne-extensions",children:"Test federation"})," in your projects, report issues and contribute bugfixes and tests!"]}),"\n",(0,t.jsx)(n.h2,{id:"changelog",children:"CHANGELOG"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Added support for custom schema directives."}),"\n",(0,t.jsxs)(n.li,{children:["Added support for synchronous extensions and synchronous versions of ",(0,t.jsx)(n.code,{children:"ApolloTracing"})," and ",(0,t.jsx)(n.code,{children:"OpenTracing"})," extensions."]}),"\n",(0,t.jsxs)(n.li,{children:["Added ",(0,t.jsx)(n.code,{children:"context"})," argument to ",(0,t.jsx)(n.code,{children:"has_errors"})," and ",(0,t.jsx)(n.code,{children:"format"})," hooks."]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},84429:function(e,n,s){s.d(n,{R:()=>o,x:()=>a});var r=s(96540);let t={},i=r.createContext(t);function o(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},53176:function(e){e.exports=JSON.parse('{"permalink":"/blog/2019/10/03/ariadne-0-7-0","source":"@site/blog/2019-10-03-ariadne-0-7-0.md","title":"Ariadne 0.7.0","description":"Ariadne 0.7 brings support for custom schema directives and synchronous extensions.","date":"2019-10-03T00:00:00.000Z","tags":[],"readingTime":2.21,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Ariadne 0.7.0"},"unlisted":false,"prevItem":{"title":"Ariadne 0.8.0","permalink":"/blog/2019/11/25/ariadne-0-8-0"},"nextItem":{"title":"Ariadne 0.6.0","permalink":"/blog/2019/08/12/ariadne-0-6-0"}}')}}]);