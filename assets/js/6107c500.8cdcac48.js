"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["43892"],{29781:function(e,n,i){i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>d});var t=i(90213),s=i(74848),o=i(84429);let r={title:"Ariadne 0.11.0"},a,c={authorsImageUrls:[]},d=[{value:"Removed support for sending queries and mutations via WebSocket",id:"removed-support-for-sending-queries-and-mutations-via-websocket",level:2},{value:"Unified default <code>info.context</code> value for WSGI to be dict with single <code>request</code> key",id:"unified-default-infocontext-value-for-wsgi-to-be-dict-with-single-request-key",level:2},{value:"CHANGELOG",id:"changelog",level:2}];function l(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"No joke, today we are releasing Ariadne 0.11!"}),"\n",(0,s.jsx)(n.p,{children:"Ariadne 0.11 is an maintenance release focused on resolving few small but annoying issues reported by the community."}),"\n",(0,s.jsx)(n.h2,{id:"removed-support-for-sending-queries-and-mutations-via-websocket",children:"Removed support for sending queries and mutations via WebSocket"}),"\n",(0,s.jsxs)(n.p,{children:["Few weeks back we've merged to Ariadne a change that enabled execution of GraphQL queries and mutations over the websocket connection - a feature implemented by some GraphQL client libraries such as ",(0,s.jsx)(n.a,{href:"https://www.apollographql.com/docs/link/links/ws/",children:"apollo-link-ws"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Only after release we have learned that logic testing if incoming GraphQL operation is subscription or not is incorrect, classifying correct subscription payloads sent by clients as queries, making it impossible to implement subscriptions in Ariadne 0.10."}),"\n",(0,s.jsx)(n.p,{children:"We have decided to roll-back the change in 0.11, to make sure that subscriptions are still available to users that rely on them."}),"\n",(0,s.jsxs)(n.p,{children:["We have also added the feature to our ",(0,s.jsx)(n.a,{href:"https://github.com/mirumee/ariadne/issues/341",children:"roadmap"})," - contributions are welcome!"]}),"\n",(0,s.jsxs)(n.h2,{id:"unified-default-infocontext-value-for-wsgi-to-be-dict-with-single-request-key",children:["Unified default ",(0,s.jsx)(n.code,{children:"info.context"})," value for WSGI to be dict with single ",(0,s.jsx)(n.code,{children:"request"})," key"]}),"\n",(0,s.jsxs)(n.p,{children:["The type of default value of ",(0,s.jsx)(n.code,{children:"info.context"})," differed between ",(0,s.jsx)(n.code,{children:"ariadne.wsgi"})," and ",(0,s.jsx)(n.code,{children:"ariadne.asgi"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["While in ASGI it was a dict with single key ",(0,s.jsx)(n.code,{children:"request"})," containing instance of current HTTP request, it in WSGI it was a dict containing HTTP request data as its attributes."]}),"\n",(0,s.jsxs)(n.p,{children:["Code examples in documentation assumed ",(0,s.jsx)(n.code,{children:'info.context["request"]'})," as means for accessing current HTTP request from resolver, which was source of confusion for those using Ariadne with WSGI."]}),"\n",(0,s.jsxs)(n.p,{children:["Starting with Ariadne 0.11, the default ",(0,s.jsx)(n.code,{children:"context"})," value passed to resolvers is also dict with single key: ",(0,s.jsx)(n.code,{children:"request"}),". This key's value is a dict containing current HTTP's request data as described by ",(0,s.jsx)(n.a,{href:"https://www.python.org/dev/peps/pep-0333/#environ-variables",children:"WSGI specification"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you've haven't customized the ",(0,s.jsx)(n.code,{children:"context_value"})," option of your GraphQL application and your resolvers rely on ",(0,s.jsx)(n.code,{children:"info.context"}),", this is a breaking change. You will have to update your resolvers to use ",(0,s.jsx)(n.code,{children:'info.context["request"]'})," for request data, or provide custom ",(0,s.jsx)(n.code,{children:"context_value"})," function returning context in old shape:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"app = GraphQL(\n    schema,\n    type_defs,\n    context_value=lambda environ: environ\n)\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Note:"})," This change applies only to ",(0,s.jsx)(n.code,{children:"GraphQL"})," class importable directly from ",(0,s.jsx)(n.code,{children:"ariadne.wsgi"})," module. If you are using Ariadne with ",(0,s.jsx)(n.code,{children:"ariadne.contrib.django"}),", ",(0,s.jsx)(n.code,{children:"info.context"})," will remain ",(0,s.jsx)(n.code,{children:"django.http.HTTPRequest"})," instance."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"changelog",children:"CHANGELOG"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Fixed ",(0,s.jsx)(n.code,{children:"convert_kwargs_to_snake_case"})," utility so it also converts the case in lists items."]}),"\n",(0,s.jsx)(n.li,{children:"Removed support for sending queries and mutations via WebSocket."}),"\n",(0,s.jsxs)(n.li,{children:["Freezed ",(0,s.jsx)(n.code,{children:"graphql-core"})," dependency at version 3.0.3."]}),"\n",(0,s.jsxs)(n.li,{children:["Unified default ",(0,s.jsx)(n.code,{children:"info.context"})," value for WSGI to be dict with single ",(0,s.jsx)(n.code,{children:"request"})," key."]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},84429:function(e,n,i){i.d(n,{R:()=>r,x:()=>a});var t=i(96540);let s={},o=t.createContext(s);function r(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},90213:function(e){e.exports=JSON.parse('{"permalink":"/blog/2020/04/01/ariadne-0-11-0","source":"@site/blog/2020-04-01-ariadne-0-11-0.md","title":"Ariadne 0.11.0","description":"No joke, today we are releasing Ariadne 0.11!","date":"2020-04-01T00:00:00.000Z","tags":[],"readingTime":2.01,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Ariadne 0.11.0"},"unlisted":false,"prevItem":{"title":"Ariadne 0.12.0","permalink":"/blog/2020/08/04/ariadne-0-12-0"},"nextItem":{"title":"Ariadne 0.10.0","permalink":"/blog/2020/02/11/ariadne-0-10-0"}}')}}]);