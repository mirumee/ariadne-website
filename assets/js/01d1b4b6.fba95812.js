"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["55194"],{3805:function(e,n,r){r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var i=r(94223),t=r(74848),a=r(84429);let o={title:"Ariadne 0.22"},s,d={authorsImageUrls:[]},l=[{value:"Fixed <code>GraphQLTransportWSHandler</code> error responses",id:"fixed-graphqltransportwshandler-error-responses",level:2},{value:"Improvements to enum handling",id:"improvements-to-enum-handling",level:2},{value:"Changelog",id:"changelog",level:2}];function c(e){let n={code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Ariadne 0.22 has been released!"}),"\n",(0,t.jsxs)(n.p,{children:["This release fixes the invalid error message being returned from the ",(0,t.jsx)(n.code,{children:"GraphQLTransportWSHandler"})," if the GraphQL error occurred for the query or mutation operations. It also improves implementation of enums handling."]}),"\n",(0,t.jsxs)(n.h2,{id:"fixed-graphqltransportwshandler-error-responses",children:["Fixed ",(0,t.jsx)(n.code,{children:"GraphQLTransportWSHandler"})," error responses"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"GraphQLTransportWSHandler"})," would return an incorrect error payload for ",(0,t.jsx)(n.code,{children:"query"})," and ",(0,t.jsx)(n.code,{children:"mutation"})," operations that errored. ",(0,t.jsx)(n.code,{children:"payload"})," for ",(0,t.jsx)(n.code,{children:"error"})," message should be a list of GraphQL errors, but due to a bug in implementation, it would be a list with single ",(0,t.jsx)(n.code,{children:"{errors: [...]}"})," result."]}),"\n",(0,t.jsx)(n.h2,{id:"improvements-to-enum-handling",children:"Improvements to enum handling"}),"\n",(0,t.jsx)(n.p,{children:"GraphQL comes with a number of quirks when it comes to enums behavior, especially converting their GraphQL values to Python, and vice-versa."}),"\n",(0,t.jsxs)(n.p,{children:["Previously Ariadne relied on the logic implemented by the ",(0,t.jsx)(n.code,{children:"EnumType"})," bindable for handling this behavior, but Ariadne 0.22 moves this logic from ",(0,t.jsx)(n.code,{children:"EnumType.bind_to_default_values"})," into a new ",(0,t.jsx)(n.code,{children:"repair_schema_default_enum_values"})," utility. ",(0,t.jsx)(n.code,{children:"validate_schema_enum_values"})," utility has been replaced with new ",(0,t.jsx)(n.code,{children:"validate_schema_default_enum_values"})," utility."]}),"\n",(0,t.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Deprecated ",(0,t.jsx)(n.code,{children:"EnumType.bind_to_default_values"})," method. It will be removed in a future release."]}),"\n",(0,t.jsxs)(n.li,{children:["Added ",(0,t.jsx)(n.code,{children:"repair_schema_default_enum_values"})," to public API."]}),"\n",(0,t.jsxs)(n.li,{children:["Removed ",(0,t.jsx)(n.code,{children:"validate_schema_enum_values"})," and introduced ",(0,t.jsx)(n.code,{children:"validate_schema_default_enum_values"})," in its place. This is a breaking change."]}),"\n",(0,t.jsxs)(n.li,{children:["Fixed an invalid error message returned by the ",(0,t.jsx)(n.code,{children:"GraphQLTransportWSHandler"})," for ",(0,t.jsx)(n.code,{children:"query"})," and ",(0,t.jsx)(n.code,{children:"mutation"})," operations."]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},84429:function(e,n,r){r.d(n,{R:()=>o,x:()=>s});var i=r(96540);let t={},a=i.createContext(t);function o(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},94223:function(e){e.exports=JSON.parse('{"permalink":"/blog/2024/01/31/ariadne-0-22-0","source":"@site/blog/2024-01-31-ariadne-0-22-0.md","title":"Ariadne 0.22","description":"Ariadne 0.22 has been released!","date":"2024-01-31T00:00:00.000Z","tags":[],"readingTime":0.95,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Ariadne 0.22"},"unlisted":false,"prevItem":{"title":"Ariadne Codegen 0.12","permalink":"/blog/2024/02/05/ariadne-codegen-0-12"},"nextItem":{"title":"Ariadne Codegen 0.11","permalink":"/blog/2023/12/05/ariadne-codegen-0-11"}}')}}]);