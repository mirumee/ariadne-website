"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["90554"],{38339:function(e){e.exports=JSON.parse('{"version":{"pluginId":"server","version":"0.7.0","label":"0.7.0","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-0.7.0","isLast":false,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Docs","items":[{"type":"link","label":"Introduction","href":"/server/0.7.0/intro","docId":"intro","unlisted":false},{"type":"link","label":"Resolvers","href":"/server/0.7.0/resolvers","docId":"resolvers","unlisted":false},{"type":"link","label":"Mutations","href":"/server/0.7.0/mutations","docId":"mutations","unlisted":false},{"type":"link","label":"Error messaging","href":"/server/0.7.0/error-messaging","docId":"error-messaging","unlisted":false},{"type":"link","label":"Custom scalars","href":"/server/0.7.0/scalars","docId":"scalars","unlisted":false},{"type":"link","label":"Enumeration types","href":"/server/0.7.0/enums","docId":"enums","unlisted":false},{"type":"link","label":"Union types","href":"/server/0.7.0/unions","docId":"unions","unlisted":false},{"type":"link","label":"Interface types","href":"/server/0.7.0/interfaces","docId":"interfaces","unlisted":false},{"type":"link","label":"Subscriptions","href":"/server/0.7.0/subscriptions","docId":"subscriptions","unlisted":false},{"type":"link","label":"File uploads","href":"/server/0.7.0/file-uploads","docId":"file-uploads","unlisted":false},{"type":"link","label":"Documenting schema","href":"/server/0.7.0/documenting-schema","docId":"documenting-schema","unlisted":false},{"type":"link","label":"Modularization","href":"/server/0.7.0/modularization","docId":"modularization","unlisted":false},{"type":"link","label":"Bindables","href":"/server/0.7.0/bindables","docId":"bindables","unlisted":false},{"type":"link","label":"Schema directives","href":"/server/0.7.0/schema-directives","docId":"schema-directives","unlisted":false},{"type":"link","label":"Local development","href":"/server/0.7.0/local-development","docId":"local-development","unlisted":false},{"type":"link","label":"Logging","href":"/server/0.7.0/logging","docId":"logging","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Monitoring","items":[{"type":"link","label":"Apollo Tracing","href":"/server/0.7.0/apollo-tracing","docId":"apollo-tracing","unlisted":false},{"type":"link","label":"OpenTracing","href":"/server/0.7.0/open-tracing","docId":"open-tracing","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Servers","items":[{"type":"link","label":"ASGI application","href":"/server/0.7.0/asgi","docId":"asgi","unlisted":false},{"type":"link","label":"WSGI application","href":"/server/0.7.0/wsgi","docId":"wsgi","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Integrations","items":[{"type":"link","label":"Django","href":"/server/0.7.0/django-integration","docId":"django-integration","unlisted":false},{"type":"link","label":"Flask","href":"/server/0.7.0/flask-integration","docId":"flask-integration","unlisted":false},{"type":"link","label":"Starlette","href":"/server/0.7.0/starlette-integration","docId":"starlette-integration","unlisted":false},{"type":"link","label":"Other technologies","href":"/server/0.7.0/other-integrations","docId":"other-integrations","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Extensions","items":[{"type":"link","label":"Extension system","href":"/server/0.7.0/extensions","docId":"extensions","unlisted":false},{"type":"link","label":"Middleware","href":"/server/0.7.0/middleware","docId":"middleware","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API reference","items":[{"type":"link","label":"ariadne","href":"/server/0.7.0/api-reference","docId":"api-reference","unlisted":false},{"type":"link","label":"ariadne.constants","href":"/server/0.7.0/constants-reference","docId":"constants-reference","unlisted":false},{"type":"link","label":"ariadne.exceptions","href":"/server/0.7.0/exceptions-reference","docId":"exceptions-reference","unlisted":false},{"type":"link","label":"ariadne.types","href":"/server/0.7.0/types-reference","docId":"types-reference","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Other","items":[{"type":"link","label":"Ariadne logo","href":"/server/0.7.0/logo","docId":"logo","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"api-reference":{"id":"api-reference","title":"API reference","description":"Following items are importable directly from ariadne package:","sidebar":"tutorialSidebar"},"apollo-tracing":{"id":"apollo-tracing","title":"Apollo Tracing","description":"Apollo Tracing exposes basic performance data of GraphQL queries: Query execution time and execution time of individual resolvers. Ariadne has GraphQL extension that includes this data in the JSON returned by the server after completing the query.","sidebar":"tutorialSidebar"},"asgi":{"id":"asgi","title":"ASGI application","description":"Ariadne provides a GraphQL class that implements a production-ready ASGI application.","sidebar":"tutorialSidebar"},"bindables":{"id":"bindables","title":"Bindables","description":"In Ariadne bindables are special types implementing the logic required for binding Python callables and values to the GraphQL schema.","sidebar":"tutorialSidebar"},"constants-reference":{"id":"constants-reference","title":"Constants reference","description":"Following constants are importable from ariadne.constants package:","sidebar":"tutorialSidebar"},"django-integration":{"id":"django-integration","title":"Django integration","description":"Ariadne ships with ariadne.contrib.django package that should be used as Django app and provides utilities for adding GraphQL server to Django projects.","sidebar":"tutorialSidebar"},"documenting-schema":{"id":"documenting-schema","title":"Documenting schema","description":"The GraphQL specification includes two features that make documentation and schema exploration easy and powerful.  Those features are descriptions and introspection queries.","sidebar":"tutorialSidebar"},"enums":{"id":"enums","title":"Enumeration types","description":"Ariadne supports enumeration types, which are represented as strings in Python logic:","sidebar":"tutorialSidebar"},"error-messaging":{"id":"error-messaging","title":"Error messaging","description":"If you\'ve experimented with GraphQL, you should be familiar that when things don\'t go according to plan, GraphQL servers include an additional key errors in the returned response:","sidebar":"tutorialSidebar"},"exceptions-reference":{"id":"exceptions-reference","title":"Exceptions reference","description":"Ariadne defines some custom exception types that can be imported from ariadne.exceptions:","sidebar":"tutorialSidebar"},"extensions":{"id":"extensions","title":"Extension system","description":"Ariadne implements simple extension system that allows developers to inject custom python logic into the query execution process.","sidebar":"tutorialSidebar"},"file-uploads":{"id":"file-uploads","title":"File uploads","description":"Ariadne implements the GraphQL multipart request specification that describes how file uploads should be implemented by both API clients and servers.","sidebar":"tutorialSidebar"},"flask-integration":{"id":"flask-integration","title":"Flask integration","description":"The following example presents a basic GraphQL server built with Flask:","sidebar":"tutorialSidebar"},"interfaces":{"id":"interfaces","title":"Interface types","description":"An interface is an abstract GraphQL type that defines a certain set of fields.  Any other type that contains the same set of fields is said to implement that interface. Types that implement an interface are not limited by it. In other words, a type can implement an interface\'s fields as well as additional fields.  The key point is that a type must implement at least the fields of an interface in order for the schema to be correct.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to Ariadne!","sidebar":"tutorialSidebar"},"local-development":{"id":"local-development","title":"Local development","description":"Starting a local server","sidebar":"tutorialSidebar"},"logging":{"id":"logging","title":"Logging","description":"Ariadne logs all errors using default the ariadne logger. To define a custom logger instead, pass its name to the logger argument when instantiating your application:","sidebar":"tutorialSidebar"},"logo":{"id":"logo","title":"Ariadne logo","description":"Ariadne logo is an \\"A\\" shaped labyrinth. If your project uses Ariadne and you want to share the love, feel free to place the logo somewhere on your site and link back to https","sidebar":"tutorialSidebar"},"middleware":{"id":"middleware","title":"Middleware","description":"GraphQL middleware are Python functions and callable objects that can be used to inject custom logic into query executor.","sidebar":"tutorialSidebar"},"modularization":{"id":"modularization","title":"Modularization","description":"Ariadne allows you to spread your GraphQL API implementation over multiple files, with different strategies being available for schema and resolvers.","sidebar":"tutorialSidebar"},"mutations":{"id":"mutations","title":"Mutations","description":"All the previous examples in this documentation have dealt with the Query root type and reading data. What about creating, updating or deleting data?","sidebar":"tutorialSidebar"},"open-tracing":{"id":"open-tracing","title":"OpenTracing","description":"Ariadne provides an extension that implements the OpenTracing specification, making it easy to monitor GraphQL API performance and errors using popular APM tools like Datadog or Jaeger.","sidebar":"tutorialSidebar"},"other-integrations":{"id":"other-integrations","title":"Other technologies","description":"Ariadne can be used to add GraphQL server to projects developed using any web framework that supports JSON responses.","sidebar":"tutorialSidebar"},"resolvers":{"id":"resolvers","title":"Resolvers","description":"In Ariadne, a resolver is any Python callable that accepts two positional arguments (obj and info):","sidebar":"tutorialSidebar"},"scalars":{"id":"scalars","title":"Custom scalars","description":"Custom scalars allow you to convert your Python objects to a JSON-serializable form in query results, as well as convert those JSON forms back to Python objects when they are passed as arguments or input values.","sidebar":"tutorialSidebar"},"schema-directives":{"id":"schema-directives","title":"Schema directives","description":"Schema directives are special annotations that developers can use to change or extend behaviour for selected elements in the schema. Those annotations are defined using dedicated syntax and then consumed during the executable schema creation.","sidebar":"tutorialSidebar"},"starlette-integration":{"id":"starlette-integration","title":"Starlette integration","description":"Ariadne is an ASGI application that can be directly mounted under Starlette. It will support both HTTP and WebSocket traffic used by subscriptions:","sidebar":"tutorialSidebar"},"subscriptions":{"id":"subscriptions","title":"Subscriptions","description":"Let\'s introduce a third type of operation. While queries offer a way to query a server once, subscriptions offer a way for the server to notify the client each time new data is available.","sidebar":"tutorialSidebar"},"types-reference":{"id":"types-reference","title":"Types reference","description":"Ariadne uses type annotations in its codebase.","sidebar":"tutorialSidebar"},"unions":{"id":"unions","title":"Union types","description":"When designing your API, you may run into a situation where you want your field to resolve to one of a few possible types. It may be an error field that can resolve to one of many error types, or an activity feed made up of different types.","sidebar":"tutorialSidebar"},"wsgi":{"id":"wsgi","title":"WSGI application","description":"Ariadne provides a GraphQL class that implements a production-ready WSGI application.","sidebar":"tutorialSidebar"}}}}')}}]);