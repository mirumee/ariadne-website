"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["56473"],{19274:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>a,toc:()=>l,default:()=>p,metadata:()=>t,assets:()=>c,contentTitle:()=>o});var t=JSON.parse('{"id":"open-tracing","title":"OpenTracing","description":"Ariadne provides an extension that implements the OpenTracing specification, making it easy to monitor GraphQL API performance and errors using popular APM tools like Datadog or Jaeger.","source":"@site/server_versioned_docs/version-0.19/open-tracing.md","sourceDirName":".","slug":"/open-tracing","permalink":"/server/0.19/open-tracing","draft":false,"unlisted":false,"tags":[],"version":"0.19","frontMatter":{"id":"open-tracing","title":"OpenTracing"},"sidebar":"tutorialSidebar","previous":{"title":"Apollo Tracing","permalink":"/server/0.19/apollo-tracing"},"next":{"title":"Security Overview","permalink":"/server/0.19/security-overview"}}'),r=i(74848),s=i(84429);let a={id:"open-tracing",title:"OpenTracing"},o,c={},l=[{value:"Enabling OpenTracing in the API",id:"enabling-opentracing-in-the-api",level:2},{value:"Sanitizing sensitive arguments data",id:"sanitizing-sensitive-arguments-data",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Ariadne provides an extension that implements the ",(0,r.jsx)(n.a,{href:"https://opentracing.io/",children:"OpenTracing"})," specification, making it easy to monitor GraphQL API performance and errors using popular APM tools like ",(0,r.jsx)(n.a,{href:"https://www.datadoghq.com/",children:"Datadog"})," or ",(0,r.jsx)(n.a,{href:"https://www.jaegertracing.io/",children:"Jaeger"}),"."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," for performance reasons OpenTracing extension excludes default resolvers."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"enabling-opentracing-in-the-api",children:"Enabling OpenTracing in the API"}),"\n",(0,r.jsxs)(n.p,{children:["To enable OpenTracing in your API, import the ",(0,r.jsx)(n.code,{children:"OpenTracingExtension"})," class from ",(0,r.jsx)(n.code,{children:"ariadne.contrib.tracing.opentracing"})," and pass it to your server ",(0,r.jsx)(n.code,{children:"extensions"})," option:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from ariadne.contrib.tracing.opentracing import OpenTracingExtension\n\napp = GraphQL(\n    schema,\n    debug=True,\n    extensions=[OpenTracingExtension],\n)\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," If using WSGI, use ",(0,r.jsx)(n.code,{children:"OpenTracingExtensionSync"})," in place of ",(0,r.jsx)(n.code,{children:"OpenTracingExtension"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," If you don't have OpenTracing already configured in your project, you will need to install the ",(0,r.jsx)(n.a,{href:"https://github.com/opentracing/opentracing-python",children:(0,r.jsx)(n.code,{children:"opentracing-python"})})," package and ",(0,r.jsx)(n.a,{href:"https://opentracing.io/guides/python/tracers/",children:"configure tracer"})," for your APM solution."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sanitizing-sensitive-arguments-data",children:"Sanitizing sensitive arguments data"}),"\n",(0,r.jsx)(n.p,{children:"By default all arguments are sent to the APM service. If your API fields have arguments for sensitive data like passwords or tokens, you will need to sanitize those before sending tracking data to the service."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"OpenTracingExtension"})," has single configuration option named ",(0,r.jsx)(n.code,{children:"arg_filter"}),", that can be a function that extension will call with the copy of the dict of arguments previously passed to field's resolver."]}),"\n",(0,r.jsxs)(n.p,{children:["Because extension instances are created per request, ",(0,r.jsx)(n.code,{children:"OpenTracingExtension"})," can't be instantiated inside the ",(0,r.jsx)(n.code,{children:"extensions"}),". Instead Ariadne provides ",(0,r.jsx)(n.code,{children:"opentracing_extension"})," utility that creates partial function that initializes the ",(0,r.jsx)(n.code,{children:"OpenTracingExtension"})," with ",(0,r.jsx)(n.code,{children:"arg_filter"})," option per request."]}),"\n",(0,r.jsxs)(n.p,{children:["Here is an example defining custom sanitizing function named ",(0,r.jsx)(n.code,{children:"my_arg_filter"})," and using ",(0,r.jsx)(n.code,{children:"opentracing_extension"})," to enable OpenTracing with it:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from ariadne.contrib.tracing import opentracing_extension\n\ndef my_arg_filter(args, info):\n    if "password" in args:\n        args["password"] = "[redacted]"\n    if "secret" in args:\n        args["secret"] = "[redacted]"\n    for key, value in args.items():\n        if isinstance(value, dict):\n            args[key] = my_arg_filter(value)\n        if isinstance(value, list):\n            args[key] = [my_arg_filter(v) for v in value]\n    return args\n\n\nschema = make_executable_schema(type_def, [query, mutation])\napp = GraphQL(\n    schema,\n    debug=True,\n    extensions=[\n        opentracing_extension(arg_filter=my_arg_filter),\n    ],\n)\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," If you are using WSGI, use ",(0,r.jsx)(n.code,{children:"opentracing_extension_sync"})," in place of ",(0,r.jsx)(n.code,{children:"opentracing_extension"}),"."]}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},84429:function(e,n,i){i.d(n,{R:()=>a,x:()=>o});var t=i(96540);let r={},s=t.createContext(r);function a(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);