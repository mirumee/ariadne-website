"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["73454"],{95744:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>a,toc:()=>c,default:()=>h,metadata:()=>s,assets:()=>o,contentTitle:()=>i});var s=JSON.parse('{"id":"asgi-reference","title":"ASGI reference","description":"The ariadne.asgi package exports the GraphQL ASGI application:","source":"@site/server_versioned_docs/version-0.18/asgi-reference.md","sourceDirName":".","slug":"/asgi-reference","permalink":"/server/0.18/asgi-reference","draft":false,"unlisted":false,"tags":[],"version":"0.18","frontMatter":{"id":"asgi-reference","title":"ASGI reference","sidebar_label":"ariadne.asgi"},"sidebar":"tutorialSidebar","previous":{"title":"ariadne","permalink":"/server/0.18/api-reference"},"next":{"title":"ariadne.asgi.handlers","permalink":"/server/0.18/asgi-handlers-reference"}}'),l=r(74848),t=r(84429);let a={id:"asgi-reference",title:"ASGI reference",sidebar_label:"ariadne.asgi"},i,o={},c=[{value:"<code>GraphQL</code>",id:"graphql",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Required arguments",id:"required-arguments",level:4},{value:"Optional arguments",id:"optional-arguments",level:4},{value:"Methods",id:"methods",level:3},{value:"<code>__call__</code>",id:"__call__",level:4},{value:"Required arguments",id:"required-arguments-1",level:5},{value:"<code>handle_request</code>",id:"handle_request",level:4},{value:"<code>handle_websocket</code>",id:"handle_websocket",level:4}];function d(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"ariadne.asgi"})," package exports the ",(0,l.jsx)(n.code,{children:"GraphQL"})," ASGI application:"]}),"\n",(0,l.jsx)(n.h2,{id:"graphql",children:(0,l.jsx)(n.code,{children:"GraphQL"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"class GraphQL:\n    ...\n"})}),"\n",(0,l.jsx)(n.p,{children:"ASGI application implementing the GraphQL server."}),"\n",(0,l.jsx)(n.p,{children:"Can be used stand-alone or mounted within other ASGI application, for\nexample in Starlette or FastAPI."}),"\n",(0,l.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def __init__(\n    self,\n    schema: GraphQLSchema,\n    *,\n    context_value: Optional[ContextValue],\n    root_value: Optional[RootValue],\n    query_parser: Optional[QueryParser],\n    validation_rules: Optional[ValidationRules],\n    debug: bool,\n    introspection: bool,\n    explorer: Optional[Explorer],\n    logger: Union[None, str, Logger, LoggerAdapter],\n    error_formatter: ErrorFormatter,\n    execution_context_class: Optional[Type[ExecutionContext]],\n    http_handler: Optional[GraphQLHTTPHandler],\n    websocket_handler: Optional[GraphQLWebsocketHandler],\n):\n    ...\n"})}),"\n",(0,l.jsx)(n.p,{children:"Initializes the ASGI app and it's http and websocket handlers."}),"\n",(0,l.jsx)(n.h4,{id:"required-arguments",children:"Required arguments"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"schema"}),": an instance of ",(0,l.jsx)(n.a,{href:"https://graphql-core-3.readthedocs.io/en/latest/modules/type.html#graphql.type.GraphQLSchema",children:"GraphQL schema"})," to execute queries against."]}),"\n",(0,l.jsx)(n.h4,{id:"optional-arguments",children:"Optional arguments"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"context_value"}),": a ",(0,l.jsx)(n.a,{href:"/server/0.18/types-reference#contextvalue",children:(0,l.jsx)(n.code,{children:"ContextValue"})})," to use by this server for context.\nDefaults to ",(0,l.jsx)(n.code,{children:'{"request": request}'})," dictionary where ",(0,l.jsx)(n.code,{children:"request"})," is\nan instance of ",(0,l.jsx)(n.code,{children:"starlette.requests.Request"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"root_value"}),": a ",(0,l.jsx)(n.a,{href:"/server/0.18/types-reference#rootvalue",children:(0,l.jsx)(n.code,{children:"RootValue"})})," to use by this server for root value.\nDefaults to ",(0,l.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"query_parser"}),": a ",(0,l.jsx)(n.a,{href:"/server/0.18/types-reference#queryparser",children:(0,l.jsx)(n.code,{children:"QueryParser"})})," to use by this server. Defaults to\n",(0,l.jsx)(n.code,{children:"graphql.parse"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"validation_rules"}),": a ",(0,l.jsx)(n.a,{href:"/server/0.18/types-reference#validationrules",children:(0,l.jsx)(n.code,{children:"ValidationRules"})})," list or callable returning a\nlist of extra validation rules server should use to validate the\nGraphQL queries. Defaults to ",(0,l.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"debug"}),": a ",(0,l.jsx)(n.code,{children:"bool"})," controlling in server should run in debug mode or\nnot. Controls details included in error data returned to clients.\nDefaults to ",(0,l.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"introspection"}),": a ",(0,l.jsx)(n.code,{children:"bool"})," controlling if server should allow the\nGraphQL introspection queries. If ",(0,l.jsx)(n.code,{children:"False"}),", introspection queries will\nfail to pass the validation. Defaults to ",(0,l.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"/server/0.18/explorers",children:(0,l.jsx)(n.code,{children:"explorer"})}),": an instance of ",(0,l.jsx)(n.a,{href:"/server/0.18/explorers",children:(0,l.jsx)(n.code,{children:"Explorer"})})," subclass to use when the server\nreceives an HTTP GET request. If not set, default GraphQL explorer\nfor your version of Ariadne is used."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"logger"}),": a ",(0,l.jsx)(n.code,{children:"str"})," with name of logger or logger instance server\ninstance should use for logging errors. If not set, a logger named\n",(0,l.jsx)(n.code,{children:"ariadne"})," is used."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"error_formatter"}),": an ",(0,l.jsx)(n.a,{href:"/server/0.18/types-reference#errorformatter",children:(0,l.jsx)(n.code,{children:"ErrorFormatter"})})," this server should use to format\nGraphQL errors returned to clients. If not set, default formatter\nimplemented by Ariadne is used."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"execution_context_class"}),": custom ",(0,l.jsx)(n.code,{children:"ExecutionContext"})," type to use by\nthis server to execute the GraphQL queries. Defaults to standard\ncontext type implemented by the ",(0,l.jsx)(n.code,{children:"graphql"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"http_handler"}),": an instance of [",(0,l.jsx)(n.a,{href:"/server/0.18/asgi-handlers-reference#graphqlhttphandler",children:(0,l.jsx)(n.code,{children:"GraphQLHTTPHandler"})}),"](asgi-handlers-reference.md#graphqlhttphandler) class implementing\nthe HTTP requests handling logic for this server. If not set,\nan instance of [",(0,l.jsx)(n.a,{href:"/server/0.18/asgi-handlers-reference#graphqlhttphandler",children:(0,l.jsx)(n.code,{children:"GraphQLHTTPHandler"})}),"](asgi-handlers-reference.md#graphqlhttphandler) is used."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"websocket_handler"}),": an instance of [",(0,l.jsx)(n.a,{href:"/server/0.18/asgi-handlers-reference#graphqlwebsockethandler",children:(0,l.jsx)(n.code,{children:"GraphQLWebsocketHandler"})}),"](asgi-handlers-reference.md#graphqlwebsockethandler) class\nimplementing the websocket connections handling logic for this server.\nIf not set, ",(0,l.jsx)(n.a,{href:"/server/0.18/asgi-handlers-reference#graphqlwshandler",children:(0,l.jsx)(n.code,{children:"GraphQLWSHandler"})})," will be used, implementing older\nversion of GraphQL subscriptions protocol."]}),"\n",(0,l.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(n.h4,{id:"__call__",children:(0,l.jsx)(n.code,{children:"__call__"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n    ...\n"})}),"\n",(0,l.jsx)(n.p,{children:"An entrypoint to the ASGI application."}),"\n",(0,l.jsx)(n.p,{children:"Supports both HTTP and WebSocket connections."}),"\n",(0,l.jsx)(n.h5,{id:"required-arguments-1",children:"Required arguments"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"scope"}),": The ",(0,l.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html#connection-scope",children:"connection scope"})," information, a dictionary that contains\nat least a type key specifying the protocol that is incoming."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"receive"}),": an awaitable callable that will yield a new event dictionary\nwhen one is available."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"send"}),": an awaitable callable taking a single event dictionary as a\npositional argument that will return once the send has been completed\nor the connection has been closed."]}),"\n",(0,l.jsx)(n.p,{children:"Details about the arguments and their usage are described in the\nASGI specification:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html",children:"https://asgi.readthedocs.io/en/latest/specs/main.html"})}),"\n",(0,l.jsx)(n.h4,{id:"handle_request",children:(0,l.jsx)(n.code,{children:"handle_request"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"async def handle_request(self, request: Request) -> Response:\n    ...\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Shortcut for ",(0,l.jsx)(n.code,{children:"graphql_app.http_handler.handle_request(...)"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"handle_websocket",children:(0,l.jsx)(n.code,{children:"handle_websocket"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"async def handle_websocket(self, websocket: Any) -> Awaitable[Any]:\n    ...\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Shortcut for ",(0,l.jsx)(n.code,{children:"graphql_app.websocket_handler.handle_websocket(...)"}),"."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"ariadne.asgi"})," package also reexports following names:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Extensions"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"MiddlewareList"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Middlewares"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"OnComplete"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"OnConnect"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"OnDisconnect"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"OnOperation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Operation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"WebSocketConnectionError"})}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},84429:function(e,n,r){r.d(n,{R:()=>a,x:()=>i});var s=r(96540);let l={},t=s.createContext(l);function a(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);