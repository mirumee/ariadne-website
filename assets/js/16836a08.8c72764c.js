"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["36395"],{76624:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>a,toc:()=>l,default:()=>h,metadata:()=>i,assets:()=>c,contentTitle:()=>o});var i=JSON.parse('{"id":"documenting-schema","title":"Documenting schema","description":"The GraphQL specification includes two features that make documentation and schema exploration easy and powerful.  Those features are descriptions and introspection queries.","source":"@site/server_versioned_docs/version-0.10.0/documenting-schema.md","sourceDirName":".","slug":"/documenting-schema","permalink":"/server/0.10.0/documenting-schema","draft":false,"unlisted":false,"tags":[],"version":"0.10.0","frontMatter":{"id":"documenting-schema","title":"Documenting schema"},"sidebar":"tutorialSidebar","previous":{"title":"File uploads","permalink":"/server/0.10.0/file-uploads"},"next":{"title":"Modularization","permalink":"/server/0.10.0/modularization"}}'),r=s(74848),t=s(84429);let a={id:"documenting-schema",title:"Documenting schema"},o,c={},l=[{value:"GraphQL Playground",id:"graphql-playground",level:2},{value:"Descriptions",id:"descriptions",level:2},{value:"Introspection Queries",id:"introspection-queries",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"The GraphQL specification includes two features that make documentation and schema exploration easy and powerful.  Those features are descriptions and introspection queries."}),"\n",(0,r.jsx)(n.p,{children:"There is now a rich ecosystem of tools built on top of those features.  Some of which include IDE plugins, code generators and interactive API explorers."}),"\n",(0,r.jsx)(n.h2,{id:"graphql-playground",children:"GraphQL Playground"}),"\n",(0,r.jsxs)(n.p,{children:["Ariadne ships with ",(0,r.jsx)(n.a,{href:"https://github.com/prisma/graphql-playground",children:"GraphQL Playground"}),", a popular interactive API explorer."]}),"\n",(0,r.jsx)(n.p,{children:"GraphQL Playground allows developers and clients to explore the relationships between types across your schema in addition to reading detail about individual types."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"GraphQL Playground example",src:s(65460).A+"",width:"1320",height:"646"})}),"\n",(0,r.jsx)(n.h2,{id:"descriptions",children:"Descriptions"}),"\n",(0,r.jsxs)(n.p,{children:["The GraphQL schema definition language supports a special ",(0,r.jsx)(n.a,{href:"https://facebook.github.io/graphql/June2018/#sec-Descriptions",children:"description syntax"}),". This allows you to provide additional context and information alongside your type definitions, which will be accessible both to developers and API consumers."]}),"\n",(0,r.jsxs)(n.p,{children:["GraphQL descriptions are declared using a format that feels very similar to Python's ",(0,r.jsx)(n.code,{children:"docstrings"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'query = \'\'\'\n    """\n    Search results must always include a summary and a URL for the resource.\n    """\n    interface SearchResult {\n        "A brief summary of the search result."\n        summary: String!\n\n        "The URL for the resource the search result is describing."\n        url: String!\n    }\n\'\'\'\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Note that GraphQL descriptions also support Markdown (as specified in ",(0,r.jsx)(n.a,{href:"https://commonmark.org/",children:"CommonMark"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"query = '''\n    \"\"\"\n    Search results **must** always include a summary and a\n    [URL](https://en.wikipedia.org/wiki/URL) for the resource.\n    \"\"\"\n    interface SearchResult {\n        # ...\n    }\n'''\n"})}),"\n",(0,r.jsx)(n.h2,{id:"introspection-queries",children:"Introspection Queries"}),"\n",(0,r.jsxs)(n.p,{children:["The GraphQL specification also defines a programmatic way to learn about a server's schema and documentation.  This is called ",(0,r.jsx)(n.a,{href:"https://graphql.org/learn/introspection/",children:"introspection"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Query"})," type in a GraphQL schema also includes special introspection fields (prefixed with a double underscore) which allow a user or application to ask for information about the schema itself:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query IntrospectionQuery {\n    __schema {\n        types {\n            kind\n            name\n            description\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The result of the above query might look like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "__schema": {\n        "types": [\n            {\n                "kind": "OBJECT",\n                "name": "Query",\n                "description": "A simple GraphQL schema which is well described.",\n            }\n        ]\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Tools like GraphQL Playground use introspection queries internally to provide the live, dynamic experiences they do."}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65460:function(e,n,s){s.d(n,{A:()=>i});let i=s.p+"assets/images/graphql-playground-example-6a7d793c7c73ec24072e018db095ace7.jpg"},84429:function(e,n,s){s.d(n,{R:()=>a,x:()=>o});var i=s(96540);let r={},t=i.createContext(r);function a(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);