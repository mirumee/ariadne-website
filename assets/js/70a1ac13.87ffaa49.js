"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["62513"],{58265:function(e,r,n){n.r(r),n.d(r,{frontMatter:()=>i,toc:()=>d,default:()=>h,metadata:()=>s,assets:()=>a,contentTitle:()=>c});var s=JSON.parse('{"id":"exceptions-reference","title":"Exceptions reference","description":"Ariadne defines some custom exception types that can be imported from ariadne.exceptions module:","source":"@site/server_versioned_docs/version-0.25/exceptions-reference.md","sourceDirName":".","slug":"/exceptions-reference","permalink":"/server/exceptions-reference","draft":false,"unlisted":false,"tags":[],"version":"0.25","frontMatter":{"id":"exceptions-reference","title":"Exceptions reference","sidebar_label":"ariadne.exceptions"},"sidebar":"tutorialSidebar","previous":{"title":"ariadne.constants","permalink":"/server/constants-reference"},"next":{"title":"ariadne.types","permalink":"/server/types-reference"}}'),t=n(74848),o=n(84429);let i={id:"exceptions-reference",title:"Exceptions reference",sidebar_label:"ariadne.exceptions"},c,a={},d=[{value:"<code>GraphQLFileSyntaxError</code>",id:"graphqlfilesyntaxerror",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Required arguments",id:"required-arguments",level:4},{value:"Methods",id:"methods",level:3},{value:"<code>format_message</code>",id:"format_message",level:4},{value:"Required arguments",id:"required-arguments-1",level:5},{value:"<code>__str__</code>",id:"__str__",level:4},{value:"<code>HttpBadRequestError</code>",id:"httpbadrequesterror",level:2},{value:"Constructor",id:"constructor-1",level:3},{value:"<code>HttpError</code>",id:"httperror",level:2},{value:"Constructor",id:"constructor-2",level:3},{value:"Arguments",id:"arguments",level:4},{value:"<code>HttpStatusResponse</code>",id:"httpstatusresponse",level:2},{value:"<code>WebSocketConnectionError</code>",id:"websocketconnectionerror",level:2},{value:"Constructor",id:"constructor-3",level:3}];function l(e){let r={code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:["Ariadne defines some custom exception types that can be imported from ",(0,t.jsx)(r.code,{children:"ariadne.exceptions"})," module:"]}),"\n",(0,t.jsx)(r.h2,{id:"graphqlfilesyntaxerror",children:(0,t.jsx)(r.code,{children:"GraphQLFileSyntaxError"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class GraphQLFileSyntaxError(Exception):\n    ...\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Raised by ",(0,t.jsx)(r.code,{children:"load_schema_from_path"})," when loaded GraphQL file has invalid syntax."]}),"\n",(0,t.jsx)(r.h3,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"def __init__(self, file_path: Union[str, os.PathLike], message: str):\n    ...\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Initializes the ",(0,t.jsx)(r.code,{children:"GraphQLFileSyntaxError"})," with file name and error."]}),"\n",(0,t.jsx)(r.h4,{id:"required-arguments",children:"Required arguments"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"file_path"}),": a ",(0,t.jsx)(r.code,{children:"str"})," or ",(0,t.jsx)(r.code,{children:"PathLike"})," object pointing to a file that\nfailed to validate."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"message"}),": a ",(0,t.jsx)(r.code,{children:"str"})," with validation message."]}),"\n",(0,t.jsx)(r.h3,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h4,{id:"format_message",children:(0,t.jsx)(r.code,{children:"format_message"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"def format_message(\n    self,\n    file_path: Union[str, os.PathLike],\n    message: str,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(r.p,{children:"Builds final error message from path to schema file and error message."}),"\n",(0,t.jsxs)(r.p,{children:["Returns ",(0,t.jsx)(r.code,{children:"str"})," with final error message."]}),"\n",(0,t.jsx)(r.h5,{id:"required-arguments-1",children:"Required arguments"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"file_path"}),": a ",(0,t.jsx)(r.code,{children:"str"})," or ",(0,t.jsx)(r.code,{children:"PathLike"})," object pointing to a file that\nfailed to validate."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"message"}),": a ",(0,t.jsx)(r.code,{children:"str"})," with validation message."]}),"\n",(0,t.jsx)(r.h4,{id:"__str__",children:(0,t.jsx)(r.code,{children:"__str__"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"def __str__(self) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(r.p,{children:"Returns error message."}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"httpbadrequesterror",children:(0,t.jsx)(r.code,{children:"HttpBadRequestError"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class HttpBadRequestError(HttpError):\n    ...\n"})}),"\n",(0,t.jsx)(r.p,{children:"Raised when request did not contain the data required to execute\nthe GraphQL query."}),"\n",(0,t.jsx)(r.h3,{id:"constructor-1",children:"Constructor"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"def __init__(self, message: Optional[str] = None):\n    ...\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Initializes the ",(0,t.jsx)(r.code,{children:"HttpBadRequestError"})," with optional error message."]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"httperror",children:(0,t.jsx)(r.code,{children:"HttpError"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class HttpError(Exception):\n    ...\n"})}),"\n",(0,t.jsx)(r.p,{children:"Base class for HTTP errors raised inside the ASGI and WSGI servers."}),"\n",(0,t.jsx)(r.h3,{id:"constructor-2",children:"Constructor"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"def __init__(self, status: str, message: Optional[str] = None):\n    ...\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Initializes the ",(0,t.jsx)(r.code,{children:"HttpError"})," with a status and optional error message."]}),"\n",(0,t.jsx)(r.h4,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"status"}),": HTTP status code as ",(0,t.jsx)(r.code,{children:"HttpStatusResponse"}),".\n",(0,t.jsx)(r.code,{children:"message"}),": Optional error message to return in the response body."]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"httpstatusresponse",children:(0,t.jsx)(r.code,{children:"HttpStatusResponse"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class HttpStatusResponse(Enum):\n    ...\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"websocketconnectionerror",children:(0,t.jsx)(r.code,{children:"WebSocketConnectionError"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class WebSocketConnectionError(Exception):\n    ...\n"})}),"\n",(0,t.jsx)(r.p,{children:"Special error class enabling custom error reporting for on_connect"}),"\n",(0,t.jsx)(r.h3,{id:"constructor-3",children:"Constructor"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"def __init__(self, payload: Optional[Union[dict, str]] = None):\n    ...\n"})})]})}function h(e={}){let{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},84429:function(e,r,n){n.d(r,{R:()=>i,x:()=>c});var s=n(96540);let t={},o=s.createContext(t);function i(e){let r=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);