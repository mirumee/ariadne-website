"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["42117"],{66894:function(e,i,n){n.r(i),n.d(i,{frontMatter:()=>d,toc:()=>l,default:()=>h,metadata:()=>t,assets:()=>c,contentTitle:()=>a});var t=JSON.parse('{"id":"schema-directives","title":"Schema directives","description":"Schema directives are special annotations that developers can use to change or extend behaviour for selected elements in the schema. Those annotations are defined using dedicated syntax and then consumed during the executable schema creation.","source":"@site/server_versioned_docs/version-0.21/schema-directives.md","sourceDirName":".","slug":"/schema-directives","permalink":"/server/0.21/schema-directives","draft":false,"unlisted":false,"tags":[],"version":"0.21","frontMatter":{"id":"schema-directives","title":"Schema directives"},"sidebar":"tutorialSidebar","previous":{"title":"Bindables","permalink":"/server/0.21/bindables"},"next":{"title":"Local development","permalink":"/server/0.21/local-development"}}'),r=n(74848),s=n(84429);let d={id:"schema-directives",title:"Schema directives"},a,c={},l=[{value:"Defining schema directives",id:"defining-schema-directives",level:2},{value:"Applying directives to schema items",id:"applying-directives-to-schema-items",level:2},{value:"Implementing schema directive behaviour",id:"implementing-schema-directive-behaviour",level:2},{value:"Example: <code>datetime</code> format",id:"example-datetime-format",level:3}];function o(e){let i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"Schema directives are special annotations that developers can use to change or extend behaviour for selected elements in the schema. Those annotations are defined using dedicated syntax and then consumed during the executable schema creation."}),"\n",(0,r.jsx)(i.h2,{id:"defining-schema-directives",children:"Defining schema directives"}),"\n",(0,r.jsxs)(i.p,{children:["Schema directive definition begins with ",(0,r.jsx)(i.code,{children:"directive"})," keyword. This keyword is followed with the name prefixed with ",(0,r.jsx)(i.code,{children:"@"}),", optional list of arguments and list locations for which this directive may be applied on."]}),"\n",(0,r.jsx)(i.p,{children:"Example directive that changes behaviour of schema field could be defined as such:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-graphql",children:"directive @example on FIELD_DEFINITION\n"})}),"\n",(0,r.jsx)(i.p,{children:"If directive takes any arguments, those can be defined after its name using same syntax that fields use:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-graphql",children:"directive @example(arg1: String, arg2: Int!) on FIELD_DEFINITION\n"})}),"\n",(0,r.jsx)(i.p,{children:"In case when directive may be used in more than one location, locations should be separated using the pipe sign:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-graphql",children:"directive @example on OBJECT | FIELD_DEFINITION\n"})}),"\n",(0,r.jsx)(i.p,{children:"Location may be any of following:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"SCHEMA"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"SCALAR"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"OBJECT"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"FIELD_DEFINITION"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"ARGUMENT_DEFINITION"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"INTERFACE"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"UNION"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"ENUM"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"ENUM_VALUE"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"INPUT_OBJECT"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"INPUT_FIELD_DEFINITION"})}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"applying-directives-to-schema-items",children:"Applying directives to schema items"}),"\n",(0,r.jsxs)(i.p,{children:["To apply schema directive to the schema item, simply follow its definition with an ",(0,r.jsx)(i.code,{children:"@"})," and directive name:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-graphql",children:"directive @adminonly on FIELD_DEFINITION\n\ntype User {\n    id: ID\n    username: String\n    ipAddress: String @adminonly\n}\n"})}),"\n",(0,r.jsx)(i.p,{children:"If directive accepts any arguments, those can be passed to it like this:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-graphql",children:'directive @needsPermission(permission: String) on FIELD_DEFINITION\n\ntype User {\n    id: ID\n    username: String\n    ipAddress: String @needsPermission(permission: "ADMIN")\n}\n'})}),"\n",(0,r.jsxs)(i.p,{children:["Values passed to directive arguments follow same validation logic that values passed to fields in GraphQL queries do, except those errors will be raised at the time of calling the ",(0,r.jsx)(i.code,{children:"make_executable_schema"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"implementing-schema-directive-behaviour",children:"Implementing schema directive behaviour"}),"\n",(0,r.jsxs)(i.p,{children:["In Ariadne, schema directive behaviour is implemented by extending the ",(0,r.jsx)(i.a,{href:"/server/0.21/api-reference#schemadirectivevisitor",children:(0,r.jsx)(i.code,{children:"ariadne.SchemaDirectiveVisitor"})})," base class."]}),"\n",(0,r.jsxs)(i.h3,{id:"example-datetime-format",children:["Example: ",(0,r.jsx)(i.code,{children:"datetime"})," format"]}),"\n",(0,r.jsxs)(i.p,{children:["Following example implements schema directive that formats Python ",(0,r.jsx)(i.code,{children:"datetime"})," object returned by field's resolver."]}),"\n",(0,r.jsx)(i.p,{children:"First, add directive definition to your schema:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-graphql",children:"directive @date(format: String) on FIELD_DEFINITION\n"})}),"\n",(0,r.jsxs)(i.p,{children:["Next, create Python implementation for the directive that defines the ",(0,r.jsx)(i.code,{children:"visit_field_definition"})," method:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:'from ariadne import SchemaDirectiveVisitor\nfrom graphql import default_field_resolver\n\n\nclass DateDirective(SchemaDirectiveVisitor):\n    def visit_field_definition(self, field, object_type):\n        date_format = self.args.get("format")\n        original_resolver = field.resolve or default_field_resolver\n\n        def resolve_formatted_date(obj, info, **kwargs):\n            result = original_resolver(obj, info, **kwargs)\n            if result is None:\n                return None\n\n            if date_format:\n                return result.strftime(date_format)\n\n            return result.isoformat()\n\n        field.resolve = resolve_formatted_date\n        return field\n'})}),"\n",(0,r.jsxs)(i.p,{children:["Finally, use ",(0,r.jsx)(i.code,{children:"directives"})," option of ",(0,r.jsx)(i.code,{children:"make_executable_schema"})," to attach the behaviour implemented by ",(0,r.jsx)(i.code,{children:"DateDirective"})," with ",(0,r.jsx)(i.code,{children:"date"})," directive defined by schema:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:'schema = make_executable_schema(type_defs, resolvers, directives={"date": DateDirective})\n'})}),"\n",(0,r.jsxs)(i.p,{children:["You can now update your schema and use your ",(0,r.jsx)(i.code,{children:"@date"})," directive to format dates returned by your API:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-graphql",children:'type Article {\n    id: ID\n    title: String\n    text: String\n    createdAt: String @date(format: "%Y-%m-%d")\n}\n'})})]})}function h(e={}){let{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},84429:function(e,i,n){n.d(i,{R:()=>d,x:()=>a});var t=n(96540);let r={},s=t.createContext(r);function d(e){let i=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);