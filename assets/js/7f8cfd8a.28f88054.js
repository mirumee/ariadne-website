"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["22169"],{91801:function(e,a,n){n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var i=n(63249),t=n(74848),r=n(84429);let o={title:"Ariadne 0.12.0"},s,d={authorsImageUrls:[]},l=[{value:"Custom query validators and query cost validator",id:"custom-query-validators-and-query-cost-validator",level:2},{value:"Added <code>introspection</code> option in ASGI, WSGI apps and Django view",id:"added-introspection-option-in-asgi-wsgi-apps-and-django-view",level:2},{value:"Fixed default <code>parse_literal</code> implementation in <code>ScalarType</code>",id:"fixed-default-parse_literal-implementation-in-scalartype",level:2},{value:"Notice about <code>ariadne.contrib.django</code>",id:"notice-about-ariadnecontribdjango",level:2},{value:"CHANGELOG",id:"changelog",level:2}];function c(e){let a={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.p,{children:"This one took us a while, but Ariadne 0.12 is now available!"}),"\n",(0,t.jsx)(a.p,{children:"Ariadne 0.12 is a feature release that adds support for custom query validators, adds query cost validator that enables developers to limit maximum complexity of GraphQL query that can be executed by the server, and adds an option for disabling the GraphQL introspection and the GraphQL Playground IDE on servers."}),"\n",(0,t.jsx)(a.p,{children:"This release also locks required GraphQL core version at 3.0. Support for 3.1 is coming in future version."}),"\n",(0,t.jsxs)(a.p,{children:["Finally, this release also adds ",(0,t.jsx)(a.code,{children:"extensions"})," support to the Django view, and fixes a reported bug in ",(0,t.jsx)(a.code,{children:"ScalarType"})," default ",(0,t.jsx)(a.code,{children:"parse_literal"})," producing an error when GraphQL query contained both literal and query variables."]}),"\n",(0,t.jsx)(a.h2,{id:"custom-query-validators-and-query-cost-validator",children:"Custom query validators and query cost validator"}),"\n",(0,t.jsx)(a.p,{children:"It is now possible to implement custom GraphQL query validators. This is an advanced feature intended for developers who need to block malicious GraphQL queries from being executed by their server."}),"\n",(0,t.jsxs)(a.p,{children:["Out of the box, Ariadne includes a ",(0,t.jsx)(a.a,{href:"/server/query-validators",children:"query cost validator"})," that enables developers to assign costs values to GraphQL fields in the schema and limit size or complexity of a single GraphQL query that may be executed by the server."]}),"\n",(0,t.jsxs)(a.h2,{id:"added-introspection-option-in-asgi-wsgi-apps-and-django-view",children:["Added ",(0,t.jsx)(a.code,{children:"introspection"})," option in ASGI, WSGI apps and Django view"]}),"\n",(0,t.jsx)(a.p,{children:"One of the most requested features of Ariadne was an option to disable GraphQL Playground. This request had its basis on security concerns, however, disabling GraphQL Playground in Ariadne would not prevent malicious users from using a local GraphQL API client like Insomnia or the desktop version of GraphQL Playground to continue interacting with the API."}),"\n",(0,t.jsx)(a.p,{children:"This is because when users request the ability to disable GraphQL Playground, they in fact seek an option to disable introspection, a GraphQL feature enabling clients to query a GraphQL server to learn what types, fields, and mutations are implemented by its schema."}),"\n",(0,t.jsxs)(a.p,{children:["Thanks to a contribution from the community, Ariadne's ASGI app, the WSGI app, and the Django view now support an ",(0,t.jsx)(a.code,{children:"introspection"})," argument. Setting this option to ",(0,t.jsx)(a.code,{children:"False"})," will result in GraphQL Playground becoming unavailable and will also prevent any introspection queries from being executed by the server."]}),"\n",(0,t.jsxs)(a.h2,{id:"fixed-default-parse_literal-implementation-in-scalartype",children:["Fixed default ",(0,t.jsx)(a.code,{children:"parse_literal"})," implementation in ",(0,t.jsx)(a.code,{children:"ScalarType"})]}),"\n",(0,t.jsxs)(a.p,{children:["GraphQL.js reference which is used in development of Ariadne didn't document that scalar's ",(0,t.jsx)(a.code,{children:"parse_literal"})," method takes two arguments instead of one, with second argument being present when scalar's literal value was used in query that was also called with variable values."]}),"\n",(0,t.jsxs)(a.p,{children:["We've re-tested default behavior of GraphQL-Core library and found it already provides default ",(0,t.jsx)(a.code,{children:"parse_literal"})," implementation mirroring Ariadne's one. In light of this we have removed default ",(0,t.jsx)(a.code,{children:"parse_literal"})," from Ariadne's codebase and updated ",(0,t.jsx)(a.a,{href:"/server/scalars",children:"scalars documentation"})," to skip ",(0,t.jsx)(a.code,{children:"parse_literal"}),". At later date we will follow up with new documentation exploring scenarios when custom ",(0,t.jsx)(a.code,{children:"parse_literal"})," is useful."]}),"\n",(0,t.jsxs)(a.h2,{id:"notice-about-ariadnecontribdjango",children:["Notice about ",(0,t.jsx)(a.code,{children:"ariadne.contrib.django"})]}),"\n",(0,t.jsxs)(a.p,{children:["Ariadne ships with the ",(0,t.jsx)(a.code,{children:"ariadne.contrib"})," package which, amongst different useful utils, includes a ",(0,t.jsx)(a.code,{children:"django"})," package that implements a Django app complete with a GraphQL view and a few scalars specific to Django."]}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsxs)(a.strong,{children:["Today we would like to notify the community about our plan to split ",(0,t.jsx)(a.code,{children:"ariadne.contrib.django"})," into a separate package. Ariadne 0.13 will be final Ariadne release to ship with ",(0,t.jsx)(a.code,{children:"ariadne.contrib.django"}),"."]})}),"\n",(0,t.jsxs)(a.p,{children:["We are doing this to separate Ariadne releases from ",(0,t.jsx)(a.code,{children:"ariadne.contrib.django"})," and also to set an example on how we are envisioning packages providing Ariadne integration with 3rd party web frameworks."]}),"\n",(0,t.jsx)(a.h2,{id:"changelog",children:"CHANGELOG"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:["Added ",(0,t.jsx)(a.code,{children:"validation_rules"})," option to query executors as well as ASGI and WSGI apps and Django view that allow developers to include custom query validation logic in their APIs."]}),"\n",(0,t.jsxs)(a.li,{children:["Added ",(0,t.jsx)(a.code,{children:"introspection"})," option to ASGI and WSGI apps, allowing developers to disable GraphQL introspection on their server."]}),"\n",(0,t.jsxs)(a.li,{children:["Added ",(0,t.jsx)(a.code,{children:"validation.cost_validator"})," query validator that allows developers to limit maximum allowed query cost/complexity."]}),"\n",(0,t.jsxs)(a.li,{children:["Removed default literal parser from ",(0,t.jsx)(a.code,{children:"ScalarType"})," because GraphQL already provides one."]}),"\n",(0,t.jsxs)(a.li,{children:["Added ",(0,t.jsx)(a.code,{children:"extensions"})," and ",(0,t.jsx)(a.code,{children:"introspection"})," configuration options to Django view."]}),"\n",(0,t.jsxs)(a.li,{children:["Updated requirements list to require ",(0,t.jsx)(a.code,{children:"graphql-core"})," 3."]}),"\n"]})]})}function h(e={}){let{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},84429:function(e,a,n){n.d(a,{R:()=>o,x:()=>s});var i=n(96540);let t={},r=i.createContext(t);function o(e){let a=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:a},e.children)}},63249:function(e){e.exports=JSON.parse('{"permalink":"/blog/2020/08/04/ariadne-0-12-0","source":"@site/blog/2020-08-04-ariadne-0-12-0.md","title":"Ariadne 0.12.0","description":"This one took us a while, but Ariadne 0.12 is now available!","date":"2020-08-04T00:00:00.000Z","tags":[],"readingTime":3.19,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Ariadne 0.12.0"},"unlisted":false,"prevItem":{"title":"Ariadne 0.13.0","permalink":"/blog/2021/03/17/ariadne-0-13-0"},"nextItem":{"title":"Ariadne 0.11.0","permalink":"/blog/2020/04/01/ariadne-0-11-0"}}')}}]);