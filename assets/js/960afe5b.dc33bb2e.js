"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["90526"],{31349:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>s,toc:()=>l,default:()=>u,metadata:()=>t,assets:()=>d,contentTitle:()=>a});var t=JSON.parse('{"id":"plugins/standard-plugins","title":"Standard plugins","description":"Ariadne Codegen ships with optional plugins importable from the ariadne_codegen.contrib package:","source":"@site/client_versioned_docs/version-0.15.3/06-plugins/01-standard-plugins.md","sourceDirName":"06-plugins","slug":"/plugins/standard-plugins","permalink":"/client/plugins/standard-plugins","draft":false,"unlisted":false,"tags":[],"version":"0.15.3","sidebarPosition":1,"frontMatter":{"title":"Standard plugins"},"sidebar":"tutorialSidebar","previous":{"title":"Custom operation builder","permalink":"/client/custom-operation-builder"},"next":{"title":"Custom plugins","permalink":"/client/plugins/custom-plugins"}}'),r=i(74848),o=i(84429);let s={title:"Standard plugins"},a="Standard plugins",d={},l=[];function c(e){let n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"standard-plugins",children:"Standard plugins"})}),"\n",(0,r.jsxs)(n.p,{children:["Ariadne Codegen ships with optional plugins importable from the ",(0,r.jsx)(n.code,{children:"ariadne_codegen.contrib"})," package:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/mirumee/ariadne-codegen/blob/main/ariadne_codegen/contrib/shorter_results.py#L61",children:(0,r.jsx)(n.code,{children:"ariadne_codegen.contrib.shorter_results.ShorterResultsPlugin"})})," - This plugin processes generated client methods for operations where only single top field is requested, so they return this field's value directly instead of operation's result type. For example get_user method generated for query ",(0,r.jsx)(n.code,{children:"GetUser() { user(...) { ... }}"})," will return value of user field directly instead of ",(0,r.jsx)(n.code,{children:"GetUserResult"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/mirumee/ariadne-codegen/blob/main/ariadne_codegen/contrib/extract_operations.py#L29",children:(0,r.jsx)(n.code,{children:"ariadne_codegen.contrib.extract_operations.ExtractOperationsPlugin"})})," - This extracts query strings from generated client's methods into separate ",(0,r.jsx)(n.code,{children:"operations.py"})," module. It also modifies the generated client to import these definitions. Generated module name can be customized by adding ",(0,r.jsx)(n.code,{children:'operations_module_name="custom_name"'})," to the ",(0,r.jsx)(n.code,{children:"[tool.ariadne-codegen.operations]"})," section in config. Eg.:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[tool.ariadne-codegen]\n...\nplugins = ["ariadne_codegen.contrib.extract_operations.ExtractOperationsPlugin"]\n\n[tool.ariadne-codegen.extract_operations]\noperations_module_name = "custom_operations_module_name"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/mirumee/ariadne-codegen/blob/main/ariadne_codegen/contrib/client_forward_refs.py#L32",children:(0,r.jsx)(n.code,{children:"ariadne_codegen.contrib.client_forward_refs.ClientForwardRefsPlugin"})})," - This plugin changes generated client module moving all Pydantic models imports under the ",(0,r.jsx)(n.code,{children:"TYPE_CHECKING"})," condition, making them forward references. This greatly improves the import performance of the ",(0,r.jsx)(n.code,{children:"client"})," module."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/mirumee/ariadne-codegen/blob/main/ariadne_codegen/contrib/no_reimports.py#L6",children:(0,r.jsx)(n.code,{children:"ariadne_codegen.contrib.no_reimports.NoReimportsPlugin"})})," - This plugin removes content of generated ",(0,r.jsx)(n.code,{children:"__init__.py"}),". This is useful in scenarios where generated plugins contain so many Pydantic models that client's eager initialization of entire package on first import is very slow."]}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},84429:function(e,n,i){i.d(n,{R:()=>s,x:()=>a});var t=i(96540);let r={},o=t.createContext(r);function s(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);