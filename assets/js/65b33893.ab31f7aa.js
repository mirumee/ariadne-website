"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["39305"],{69751:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,toc:()=>c,default:()=>m,metadata:()=>s,assets:()=>l,contentTitle:()=>a});var s=JSON.parse('{"id":"extensions","title":"Extension system","description":"Ariadne implements simple extension system that allows developers to inject custom python logic into the query execution process. This system was designed with performance measurement extensions in mind but may potentially support other use cases.","source":"@site/server_versioned_docs/version-0.24/extensions.md","sourceDirName":".","slug":"/extensions","permalink":"/server/0.24/extensions","draft":false,"unlisted":false,"tags":[],"version":"0.24","frontMatter":{"id":"extensions","title":"Extension system"},"sidebar":"tutorialSidebar","previous":{"title":"Other technologies","permalink":"/server/0.24/other-integrations"},"next":{"title":"Middleware","permalink":"/server/0.24/middleware"}}'),i=t(74848),r=t(84429);let o={id:"extensions",title:"Extension system"},a,l={},c=[{value:"Enabling extensions",id:"enabling-extensions",level:2},{value:"Custom extension example",id:"custom-extension-example",level:2}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Ariadne implements simple extension system that allows developers to inject custom python logic into the query execution process. This system was designed with performance measurement extensions in mind but may potentially support other use cases."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"At the moment adding extensions to subscriptions is not supported."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"enabling-extensions",children:"Enabling extensions"}),"\n",(0,i.jsxs)(n.p,{children:["To enable extensions, initialize handler with ",(0,i.jsx)(n.code,{children:"extensions"})," parameter. This parameter accepts list of ",(0,i.jsx)(n.a,{href:"/server/0.24/types-reference#extension",children:"extensions"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from ariadne.asgi import GraphQL\nfrom ariadne.asgi.handlers import GraphQLHTTPHandler\n\nfrom .schema import schema\nfrom .extensions import MyExtension\n\n\napp = GraphQL(\n    schema,\n    http_handler=GraphQLHTTPHandler(\n        extensions=[MyExtension],\n    ),\n)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, if your extension depends on request or should be enabled conditionally, you can provide callable that will return extensions that should be used:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from ariadne.asgi import GraphQL\nfrom ariadne.asgi.handlers import GraphQLHTTPHandler\n\nfrom .schema import schema\nfrom .extensions import MyExtension\n\n\ndef get_extensions(request, context):\n    if request.headers.get("x-enable-my-extension"):\n        return [MyExtension]\n    return None\n\n\napp = GraphQL(\n    schema,\n    http_handler=GraphQLHTTPHandler(\n        extensions=get_extensions,\n    ),\n)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"custom-extension-example",children:"Custom extension example"}),"\n",(0,i.jsx)(n.p,{children:"Let's create simple extension that measures query execution time, and appends this time to query's result."}),"\n",(0,i.jsxs)(n.p,{children:["All extensions should extend special base class named ",(0,i.jsx)(n.a,{href:"/server/0.24/types-reference#extension",children:(0,i.jsx)(n.code,{children:"Extension"})}),", importable from ",(0,i.jsx)(n.code,{children:"ariadne.types"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from ariadne.types import Extension\n\n\nclass QueryExecutionTimeExtension(Extension):\n    ...\n"})}),"\n",(0,i.jsx)(n.p,{children:"Our extension will measure the query execution time. This means we need to measure the time of two events, request start and creation of JSON response:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import time\n\nfrom ariadne.types import Extension\n\n\nclass QueryExecutionTimeExtension(Extension):\n    def __init__(self):\n        self.start_timestamp = None\n        self.end_timestamp = None\n\n    def request_started(self, context):\n        self.start_timestamp = time.perf_counter_ns()\n\n    def format(self, context):\n        if self.start_timestamp and self.end_timestamp:\n            return {\n                "execution": time.perf_counter_ns() - self.start_timestamp\n            }\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/server/0.24/types-reference#extension",children:(0,i.jsx)(n.code,{children:"Extension"})})," reference for the list of available events."]}),"\n"]})]})}function m(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},84429:function(e,n,t){t.d(n,{R:()=>o,x:()=>a});var s=t(96540);let i={},r=s.createContext(i);function o(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);