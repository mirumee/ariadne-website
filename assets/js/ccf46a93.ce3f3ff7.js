"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["76477"],{38934:function(e,n,t){t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var i=t(4863),s=t(74848),r=t(84429);let a={title:"Ariadne 0.19"},o,d={authorsImageUrls:[]},c=[{value:"Input handling improvements",id:"input-handling-improvements",level:2},{value:"Enum handling improvements",id:"enum-handling-improvements",level:2},{value:"Federation improvements",id:"federation-improvements",level:2},{value:"CHANGELOG",id:"changelog",level:2}];function l(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Ariadne 0.19 is now out!"}),"\n",(0,s.jsx)(n.p,{children:"Ariadne 0.19 is a feature release that brings improvements for GraphQL inputs and enums. It also includes improvements to the Apollo Federation implementation contributed by the community."}),"\n",(0,s.jsx)(n.h2,{id:"input-handling-improvements",children:"Input handling improvements"}),"\n",(0,s.jsxs)(n.p,{children:["Ariadne now provides an ",(0,s.jsx)(n.code,{children:"InputType"})," class which can be used to setup custom Python representation of GraphQL input types and mappings between input's fields and original Python directory with values:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Store input field\'s values under custom dict keys\nInputType(\n    "InputName",\n    out_names={\n        "isClosed": "is_closed",\n        "isActive": "requires_activation",\n    },\n)\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'@dataclass\nclass UserInput:\n    name: str\n    email: str\n    requires_activation: Optional[bool] = None\n\n\nInputType(\n    "UserInput",\n    # Logic for converting input\'s data to Python repr is customizable\n    lambda data: UserInput(**data),\n    {"isActive": "requires_activation"},\n)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"enum-handling-improvements",children:"Enum handling improvements"}),"\n",(0,s.jsxs)(n.p,{children:["Ariadne already provides an ",(0,s.jsx)(n.code,{children:"EnumType"})," class which can be used to assign custom Python values to GraphQL enums:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'class TaskPriority(enum.IntEnum):\n    VERY_LOW = 0\n    LOW = 1\n    STANDARD = 2\n    HIGH = 3\n    URGENT = 4\n\n\nEnumType("TaskPriority", TaskPriority)\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"make_executable_schema"})," now accepts ",(0,s.jsx)(n.code,{children:"Enum"}),"s directly and attempts to associate them with their GraphQL counterparts on their name. In above case if there's already an enum in GraphQL schema named ",(0,s.jsx)(n.code,{children:"TaskPriority"}),", ",(0,s.jsx)(n.code,{children:"TaskPriority"})," can be passed to schema directly."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"EnumType"})," still remains useful in situations when enum's names are different between Python and GraphQL schema, and when enum's Python values are set using ",(0,s.jsx)(n.code,{children:"dict"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"federation-improvements",children:"Federation improvements"}),"\n",(0,s.jsxs)(n.p,{children:["Our community has contributed few improvements to Ariadne's ",(0,s.jsx)(n.code,{children:"contrib.federation"})," package, providing utilities for writing Apollo Federation subgraphs."]}),"\n",(0,s.jsxs)(n.p,{children:["Thanks to Alexis Rhote's contributions, ",(0,s.jsx)(n.code,{children:"make_federated_schema"})," now supports ",(0,s.jsx)(n.code,{children:"convert_names_case"})," just like how ",(0,s.jsx)(n.code,{children:"make_executable_schema"})," does."]}),"\n",(0,s.jsxs)(n.p,{children:["Dan Lepadatu has contributed a support for ",(0,s.jsx)(n.code,{children:"@interfaceObject"})," directive."]}),"\n",(0,s.jsx)(n.p,{children:"Dan Ring has contributed an improvements to Ariadne's federated schema processing logic, making it more tight and less error prone."}),"\n",(0,s.jsxs)(n.p,{children:["We would also like to give a shout out to Dariusz Kuc for keeping an eye on Ariadne's Federation support, and to Patrick Arminio for contributing template for federalable ",(0,s.jsx)(n.a,{href:"https://github.com/mirumee/subgraph-template-ariadne-fastapi",children:"Ariadne Fast API service"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"changelog",children:"CHANGELOG"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Added ",(0,s.jsx)(n.code,{children:"InputType"})," for setting Python representations of GraphQL Input types"]}),"\n",(0,s.jsxs)(n.li,{children:["Added support for passing ",(0,s.jsx)(n.code,{children:"Enum"})," types directly to ",(0,s.jsx)(n.code,{children:"make_executable_schema"})]}),"\n",(0,s.jsxs)(n.li,{children:["Added ",(0,s.jsx)(n.code,{children:"convert_names_case"})," option to ",(0,s.jsx)(n.code,{children:"make_federated_schema"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Added support for the ",(0,s.jsx)(n.code,{children:"@interfaceObject"})," directive in Apollo Federation."]}),"\n",(0,s.jsx)(n.li,{children:"Fixed federation support for directives without surrounding whitespace."}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},84429:function(e,n,t){t.d(n,{R:()=>a,x:()=>o});var i=t(96540);let s={},r=i.createContext(s);function a(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},4863:function(e){e.exports=JSON.parse('{"permalink":"/blog/2023/03/27/ariadne-0-19","source":"@site/blog/2023-03-27-ariadne-0-19.md","title":"Ariadne 0.19","description":"Ariadne 0.19 is now out!","date":"2023-03-27T00:00:00.000Z","tags":[],"readingTime":1.79,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Ariadne 0.19"},"unlisted":false,"prevItem":{"title":"Ariadne 0.19.1","permalink":"/blog/2023/03/28/ariadne-0-19-1"},"nextItem":{"title":"Ariadne Codegen 0.4","permalink":"/blog/2023/03/20/ariadne-codegen-0-4"}}')}}]);