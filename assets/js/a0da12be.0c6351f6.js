"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["48828"],{80942:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>d,toc:()=>a,default:()=>h,metadata:()=>r,assets:()=>o,contentTitle:()=>i});var r=JSON.parse('{"id":"asgi-handlers-reference","title":"ASGI handlers reference","description":"The ariadne.asgi.handlers package exports following","source":"@site/server_versioned_docs/version-0.23/asgi-handlers-reference.md","sourceDirName":".","slug":"/asgi-handlers-reference","permalink":"/server/0.23/asgi-handlers-reference","draft":false,"unlisted":false,"tags":[],"version":"0.23","frontMatter":{"id":"asgi-handlers-reference","title":"ASGI handlers reference","sidebar_label":"ariadne.asgi.handlers"},"sidebar":"tutorialSidebar","previous":{"title":"ariadne.asgi","permalink":"/server/0.23/asgi-reference"},"next":{"title":"ariadne.constants","permalink":"/server/0.23/constants-reference"}}'),t=s(74848),c=s(84429);let d={id:"asgi-handlers-reference",title:"ASGI handlers reference",sidebar_label:"ariadne.asgi.handlers"},i,o={},a=[{value:"<code>GraphQLHTTPHandler</code>",id:"graphqlhttphandler",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Optional arguments",id:"optional-arguments",level:4},{value:"Methods",id:"methods",level:3},{value:"<code>handle</code>",id:"handle",level:4},{value:"Required arguments",id:"required-arguments",level:5},{value:"<code>handle_request</code>",id:"handle_request",level:4},{value:"Required arguments:",id:"required-arguments-1",level:5},{value:"<code>render_explorer</code>",id:"render_explorer",level:4},{value:"Required arguments:",id:"required-arguments-2",level:5},{value:"<code>graphql_http_server</code>",id:"graphql_http_server",level:4},{value:"Required arguments:",id:"required-arguments-3",level:5},{value:"<code>extract_data_from_request</code>",id:"extract_data_from_request",level:4},{value:"Required arguments",id:"required-arguments-4",level:5},{value:"<code>extract_data_from_json_request</code>",id:"extract_data_from_json_request",level:4},{value:"Required arguments",id:"required-arguments-5",level:5},{value:"<code>extract_data_from_multipart_request</code>",id:"extract_data_from_multipart_request",level:4},{value:"Required arguments",id:"required-arguments-6",level:5},{value:"<code>extract_data_from_get_request</code>",id:"extract_data_from_get_request",level:4},{value:"Required arguments",id:"required-arguments-7",level:5},{value:"<code>execute_graphql_query</code>",id:"execute_graphql_query",level:4},{value:"Requires arguments",id:"requires-arguments",level:5},{value:"Optional arguments",id:"optional-arguments-1",level:5},{value:"<code>get_extensions_for_request</code>",id:"get_extensions_for_request",level:4},{value:"Required arguments",id:"required-arguments-8",level:5},{value:"<code>get_middleware_for_request</code>",id:"get_middleware_for_request",level:4},{value:"Required arguments",id:"required-arguments-9",level:5},{value:"<code>create_json_response</code>",id:"create_json_response",level:4},{value:"Required arguments",id:"required-arguments-10",level:5},{value:"<code>handle_not_allowed_method</code>",id:"handle_not_allowed_method",level:4},{value:"Required arguments",id:"required-arguments-11",level:5},{value:"<code>GraphQLHandler</code>",id:"graphqlhandler",level:2},{value:"Constructor",id:"constructor-1",level:3},{value:"Methods",id:"methods-1",level:3},{value:"<code>handle</code>",id:"handle-1",level:4},{value:"Required arguments",id:"required-arguments-12",level:5},{value:"<code>configure</code>",id:"configure",level:4},{value:"<code>get_context_for_request</code>",id:"get_context_for_request",level:4},{value:"Required arguments",id:"required-arguments-13",level:5},{value:"<code>GraphQLHttpHandlerBase</code>",id:"graphqlhttphandlerbase",level:2},{value:"Methods",id:"methods-2",level:3},{value:"<code>handle_request</code>",id:"handle_request-1",level:4},{value:"<code>execute_graphql_query</code>",id:"execute_graphql_query-1",level:4},{value:"<code>GraphQLTransportWSHandler</code>",id:"graphqltransportwshandler",level:2},{value:"Constructor",id:"constructor-2",level:3},{value:"Optional arguments",id:"optional-arguments-2",level:4},{value:"Methods",id:"methods-3",level:3},{value:"<code>handle</code>",id:"handle-2",level:4},{value:"Required arguments",id:"required-arguments-14",level:5},{value:"<code>handle_websocket</code>",id:"handle_websocket",level:4},{value:"Required arguments:",id:"required-arguments-15",level:5},{value:"<code>handle_connection_init_timeout</code>",id:"handle_connection_init_timeout",level:4},{value:"<code>handle_websocket_message</code>",id:"handle_websocket_message",level:4},{value:"Required arguments",id:"required-arguments-16",level:5},{value:"<code>handle_websocket_connection_init_message</code>",id:"handle_websocket_connection_init_message",level:4},{value:"Required arguments",id:"required-arguments-17",level:5},{value:"<code>handle_websocket_ping_message</code>",id:"handle_websocket_ping_message",level:4},{value:"Required arguments",id:"required-arguments-18",level:5},{value:"<code>handle_websocket_pong_message</code>",id:"handle_websocket_pong_message",level:4},{value:"Required arguments",id:"required-arguments-19",level:5},{value:"<code>handle_websocket_complete_message</code>",id:"handle_websocket_complete_message",level:4},{value:"Required arguments",id:"required-arguments-20",level:5},{value:"<code>handle_websocket_subscribe</code>",id:"handle_websocket_subscribe",level:4},{value:"Required arguments",id:"required-arguments-21",level:5},{value:"<code>handle_websocket_invalid_type</code>",id:"handle_websocket_invalid_type",level:4},{value:"Required arguments",id:"required-arguments-22",level:5},{value:"<code>handle_on_complete</code>",id:"handle_on_complete",level:4},{value:"Required arguments",id:"required-arguments-23",level:5},{value:"<code>stop_websocket_operation</code>",id:"stop_websocket_operation",level:4},{value:"Required arguments",id:"required-arguments-24",level:5},{value:"<code>observe_async_results</code>",id:"observe_async_results",level:4},{value:"Required arguments",id:"required-arguments-25",level:5},{value:"<code>GraphQLWSHandler</code>",id:"graphqlwshandler",level:2},{value:"Constructor",id:"constructor-3",level:3},{value:"Optional arguments",id:"optional-arguments-3",level:4},{value:"Methods",id:"methods-4",level:3},{value:"<code>handle</code>",id:"handle-3",level:4},{value:"Required arguments",id:"required-arguments-26",level:5},{value:"<code>handle_websocket</code>",id:"handle_websocket-1",level:4},{value:"Required arguments:",id:"required-arguments-27",level:5},{value:"<code>handle_websocket_message</code>",id:"handle_websocket_message-1",level:4},{value:"Required arguments",id:"required-arguments-28",level:5},{value:"<code>process_single_message</code>",id:"process_single_message",level:4},{value:"Required arguments",id:"required-arguments-29",level:5},{value:"<code>handle_websocket_connection_init_message</code>",id:"handle_websocket_connection_init_message-1",level:4},{value:"Required arguments",id:"required-arguments-30",level:5},{value:"<code>handle_websocket_connection_terminate_message</code>",id:"handle_websocket_connection_terminate_message",level:4},{value:"Required arguments",id:"required-arguments-31",level:5},{value:"<code>keep_websocket_alive</code>",id:"keep_websocket_alive",level:4},{value:"<code>start_websocket_operation</code>",id:"start_websocket_operation",level:4},{value:"<code>stop_websocket_operation</code>",id:"stop_websocket_operation-1",level:4},{value:"Required arguments",id:"required-arguments-32",level:5},{value:"<code>observe_async_results</code>",id:"observe_async_results-1",level:4},{value:"Required arguments",id:"required-arguments-33",level:5},{value:"<code>GraphQLWebsocketHandler</code>",id:"graphqlwebsockethandler",level:2},{value:"Constructor",id:"constructor-4",level:3},{value:"Optional arguments:",id:"optional-arguments-4",level:4},{value:"Methods",id:"methods-5",level:3},{value:"<code>handle_websocket</code>",id:"handle_websocket-2",level:4},{value:"<code>configure</code>",id:"configure-1",level:4},{value:"Optional arguments",id:"optional-arguments-5",level:5}];function l(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ariadne.asgi.handlers"})," package exports following\nASGI request handlers:"]}),"\n",(0,t.jsx)(n.h2,{id:"graphqlhttphandler",children:(0,t.jsx)(n.code,{children:"GraphQLHTTPHandler"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class GraphQLHTTPHandler(GraphQLHttpHandlerBase):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Default ASGI handler for HTTP requests."}),"\n",(0,t.jsxs)(n.p,{children:["Supports the ",(0,t.jsx)(n.code,{children:"Query"})," and ",(0,t.jsx)(n.code,{children:"Mutation"})," operations."]}),"\n",(0,t.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def __init__(\n    self,\n    extensions: Optional[Extensions] = None,\n    middleware: Optional[Middlewares] = None,\n    middleware_manager_class: Optional[Type[MiddlewareManager]] = None,\n):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initializes the HTTP handler."}),"\n",(0,t.jsx)(n.h4,{id:"optional-arguments",children:"Optional arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#extensions",children:(0,t.jsx)(n.code,{children:"extensions"})}),": an ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#extensions",children:(0,t.jsx)(n.code,{children:"Extensions"})})," list or callable returning a\nlist of extensions server should use during query execution. Defaults\nto no extensions."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"middleware"}),": a ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#middlewares",children:(0,t.jsx)(n.code,{children:"Middlewares"})})," list or callable returning a list of\nmiddlewares server should use during query execution. Defaults to no\nmiddlewares."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"middleware_manager_class"}),": a ",(0,t.jsx)(n.code,{children:"MiddlewareManager"})," type or subclass to\nuse for combining provided middlewares into single wrapper for resolvers\nby the server. Defaults to ",(0,t.jsx)(n.code,{children:"graphql.MiddlewareManager"}),". Is only used\nif ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#extensions",children:(0,t.jsx)(n.code,{children:"extensions"})})," or ",(0,t.jsx)(n.code,{children:"middleware"})," options are set."]}),"\n",(0,t.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h4,{id:"handle",children:(0,t.jsx)(n.code,{children:"handle"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle(self, scope: Scope, receive: Receive, send: Send) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"An entrypoint for the GraphQL HTTP handler."}),"\n",(0,t.jsx)(n.p,{children:"This method is called by the Ariadne ASGI GraphQL application to execute\nqueries done using the HTTP protocol."}),"\n",(0,t.jsxs)(n.p,{children:["It creates the ",(0,t.jsx)(n.code,{children:"starlette.requests.Request"})," instance, calls\n",(0,t.jsx)(n.code,{children:"handle_request"})," method with it, then sends response back to the client."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"scope"}),": The ",(0,t.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html#connection-scope",children:"connection scope"})," information, a dictionary that contains\nat least a type key specifying the protocol that is incoming."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"receive"}),": an awaitable callable that will yield a new event dictionary\nwhen one is available."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"send"}),": an awaitable callable taking a single event dictionary as a\npositional argument that will return once the send has been completed\nor the connection has been closed."]}),"\n",(0,t.jsx)(n.p,{children:"Details about the arguments and their usage are described in the\nASGI specification:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html",children:"https://asgi.readthedocs.io/en/latest/specs/main.html"})}),"\n",(0,t.jsx)(n.h4,{id:"handle_request",children:(0,t.jsx)(n.code,{children:"handle_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_request(self, request: Request) -> Response:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handle GraphQL request and return response for the client."}),"\n",(0,t.jsxs)(n.p,{children:["Is called by the ",(0,t.jsx)(n.code,{children:"handle"})," method and ",(0,t.jsx)(n.code,{children:"handle_request"})," method of the\nASGI GraphQL application."]}),"\n",(0,t.jsx)(n.p,{children:"Handles three HTTP methods:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"GET"}),": returns GraphQL explorer or 405 error response if explorer or\nintrospection is disabled."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"POST"}),": executes the GraphQL query from either ",(0,t.jsx)(n.code,{children:"application/json"})," or\n",(0,t.jsx)(n.code,{children:"multipart/form-data"})," requests."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"OPTIONS"}),": returns supported HTTP methods."]}),"\n",(0,t.jsxs)(n.p,{children:["Returns Starlette's ",(0,t.jsx)(n.code,{children:"Response"})," instance, which is also works in FastAPI."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-1",children:"Required arguments:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"render_explorer",children:(0,t.jsx)(n.code,{children:"render_explorer"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def render_explorer(self, request: Request, explorer: Explorer) -> Response:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Return a HTML response with GraphQL explorer."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-2",children:"Required arguments:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/server/0.23/explorers",children:(0,t.jsx)(n.code,{children:"explorer"})}),": an ",(0,t.jsx)(n.a,{href:"/server/0.23/explorers",children:(0,t.jsx)(n.code,{children:"Explorer"})})," instance that implements the\n",(0,t.jsx)(n.code,{children:"html(request: Request)"})," method which returns either the ",(0,t.jsx)(n.code,{children:"str"})," with HTML\nor ",(0,t.jsx)(n.code,{children:"None"}),". If explorer returns ",(0,t.jsx)(n.code,{children:"None"}),", ",(0,t.jsx)(n.code,{children:"405"})," method not allowed response\nis returned instead."]}),"\n",(0,t.jsx)(n.h4,{id:"graphql_http_server",children:(0,t.jsx)(n.code,{children:"graphql_http_server"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def graphql_http_server(self, request: Request) -> Response:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handles the HTTP request with GraphQL query."}),"\n",(0,t.jsxs)(n.p,{children:["Extracts GraphQL query data from requests and then executes it using\nthe ",(0,t.jsx)(n.code,{children:"execute_graphql_query"})," method."]}),"\n",(0,t.jsx)(n.p,{children:"Returns the JSON response from Sta"}),"\n",(0,t.jsx)(n.p,{children:"If request's data was invalid or missing, plaintext response with\nerror message and 400 status code is returned instead."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-3",children:"Required arguments:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"extract_data_from_request",children:(0,t.jsx)(n.code,{children:"extract_data_from_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def extract_data_from_request(self, request: Request) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Extracts GraphQL request data from request."}),"\n",(0,t.jsxs)(n.p,{children:["Returns a ",(0,t.jsx)(n.code,{children:"dict"})," with GraphQL query data that was not yet validated."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-4",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"extract_data_from_json_request",children:(0,t.jsx)(n.code,{children:"extract_data_from_json_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def extract_data_from_json_request(self, request: Request) -> dict:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Extracts GraphQL data from JSON request."}),"\n",(0,t.jsxs)(n.p,{children:["Returns a ",(0,t.jsx)(n.code,{children:"dict"})," with GraphQL query data that was not yet validated."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-5",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"extract_data_from_multipart_request",children:(0,t.jsx)(n.code,{children:"extract_data_from_multipart_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def extract_data_from_multipart_request(\n    self,\n    request: Request,\n) -> Union[dict, list]:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Extracts GraphQL data from ",(0,t.jsx)(n.code,{children:"multipart/form-data"})," request."]}),"\n",(0,t.jsxs)(n.p,{children:["Returns an unvalidated ",(0,t.jsx)(n.code,{children:"dict"})," with GraphQL query data."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-6",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"extract_data_from_get_request",children:(0,t.jsx)(n.code,{children:"extract_data_from_get_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def extract_data_from_get_request(self, request: Request) -> dict:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Extracts GraphQL data from GET request's querystring."}),"\n",(0,t.jsxs)(n.p,{children:["Returns a ",(0,t.jsx)(n.code,{children:"dict"})," with GraphQL query data that was not yet validated."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-7",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"execute_graphql_query",children:(0,t.jsx)(n.code,{children:"execute_graphql_query"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def execute_graphql_query(\n    self,\n    request: Any,\n    data: Any,\n    *,\n    context_value: Any,\n    query_document: Optional[DocumentNode],\n) -> GraphQLResult:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Executes GraphQL query from ",(0,t.jsx)(n.code,{children:"request"})," and returns ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#graphqlresult",children:(0,t.jsx)(n.code,{children:"GraphQLResult"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Creates GraphQL ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#contextvalue",children:(0,t.jsx)(n.code,{children:"ContextValue"})}),", initializes extensions and middlewares,\nthen runs the ",(0,t.jsx)(n.code,{children:"graphql"})," function from Ariadne to execute the query."]}),"\n",(0,t.jsx)(n.h5,{id:"requires-arguments",children:"Requires arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"data"}),": a GraphQL data."]}),"\n",(0,t.jsx)(n.h5,{id:"optional-arguments-1",children:"Optional arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"context_value"}),": a ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#contextvalue",children:(0,t.jsx)(n.code,{children:"ContextValue"})})," for this request."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"query_document"}),": an already parsed GraphQL query. Setting this option\nwill prevent ",(0,t.jsx)(n.code,{children:"graphql"})," from parsing ",(0,t.jsx)(n.code,{children:"query"})," string from ",(0,t.jsx)(n.code,{children:"data"})," second time."]}),"\n",(0,t.jsx)(n.h4,{id:"get_extensions_for_request",children:(0,t.jsx)(n.code,{children:"get_extensions_for_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def get_extensions_for_request(\n    self,\n    request: Any,\n    context: Optional[ContextValue],\n) -> ExtensionList:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns extensions to use when handling the GraphQL request."}),"\n",(0,t.jsxs)(n.p,{children:["Returns ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#extensionlist",children:(0,t.jsx)(n.code,{children:"ExtensionList"})}),", a list of extensions to use or ",(0,t.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-8",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"context"}),": a ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#contextvalue",children:(0,t.jsx)(n.code,{children:"ContextValue"})})," for this request."]}),"\n",(0,t.jsx)(n.h4,{id:"get_middleware_for_request",children:(0,t.jsx)(n.code,{children:"get_middleware_for_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def get_middleware_for_request(\n    self,\n    request: Any,\n    context: Optional[ContextValue],\n) -> MiddlewareList:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns GraphQL middlewares to use when handling the GraphQL request."}),"\n",(0,t.jsxs)(n.p,{children:["Returns ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#middlewarelist",children:(0,t.jsx)(n.code,{children:"MiddlewareList"})}),", a list of middlewares to use or ",(0,t.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-9",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"context"}),": a ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#contextvalue",children:(0,t.jsx)(n.code,{children:"ContextValue"})})," for this request."]}),"\n",(0,t.jsx)(n.h4,{id:"create_json_response",children:(0,t.jsx)(n.code,{children:"create_json_response"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def create_json_response(\n    self,\n    request: Request,\n    result: dict,\n    success: bool,\n) -> Response:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Creates JSON response from GraphQL's query result."}),"\n",(0,t.jsxs)(n.p,{children:["Returns Starlette's ",(0,t.jsx)(n.code,{children:"JSONResponse"})," instance that's also compatible\nwith FastAPI. If ",(0,t.jsx)(n.code,{children:"success"})," is ",(0,t.jsx)(n.code,{children:"True"}),", response's status code is 200.\nStatus code 400 is used otherwise."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-10",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"result"}),": a JSON-serializable ",(0,t.jsx)(n.code,{children:"dict"})," with query result."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"success"}),": a ",(0,t.jsx)(n.code,{children:"bool"})," specifying if"]}),"\n",(0,t.jsx)(n.h4,{id:"handle_not_allowed_method",children:(0,t.jsx)(n.code,{children:"handle_not_allowed_method"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def handle_not_allowed_method(self, request: Request) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handles request for unsupported HTTP method."}),"\n",(0,t.jsxs)(n.p,{children:["Returns 200 response for ",(0,t.jsx)(n.code,{children:"OPTIONS"})," request and 405 response for other\nmethods. All responses have empty body."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-11",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": the ",(0,t.jsx)(n.code,{children:"Request"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"graphqlhandler",children:(0,t.jsx)(n.code,{children:"GraphQLHandler"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class GraphQLHandler(ABC):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Base class for ASGI connection handlers."}),"\n",(0,t.jsx)(n.h3,{id:"constructor-1",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def __init__(self):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initialize the handler instance with empty configuration."}),"\n",(0,t.jsx)(n.h3,{id:"methods-1",children:"Methods"}),"\n",(0,t.jsx)(n.h4,{id:"handle-1",children:(0,t.jsx)(n.code,{children:"handle"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle(self, scope: Scope, receive: Receive, send: Send) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"An entrypoint for the ASGI connection handler."}),"\n",(0,t.jsx)(n.p,{children:"This method is called by Ariadne ASGI GraphQL application. Subclasses\nshould replace it with custom implementation."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-12",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"scope"}),": The ",(0,t.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html#connection-scope",children:"connection scope"})," information, a dictionary that contains\nat least a type key specifying the protocol that is incoming."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"receive"}),": an awaitable callable that will yield a new event dictionary\nwhen one is available."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"send"}),": an awaitable callable taking a single event dictionary as a\npositional argument that will return once the send has been completed\nor the connection has been closed."]}),"\n",(0,t.jsx)(n.p,{children:"Details about the arguments and their usage are described in the\nASGI specification:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html",children:"https://asgi.readthedocs.io/en/latest/specs/main.html"})}),"\n",(0,t.jsx)(n.h4,{id:"configure",children:(0,t.jsx)(n.code,{children:"configure"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def configure(\n    self,\n    schema: GraphQLSchema,\n    context_value: Optional[ContextValue] = None,\n    root_value: Optional[RootValue] = None,\n    query_parser: Optional[QueryParser] = None,\n    query_validator: Optional[QueryValidator] = None,\n    validation_rules: Optional[ValidationRules] = None,\n    execute_get_queries: bool = False,\n    debug: bool = False,\n    introspection: bool = True,\n    explorer: Optional[Explorer] = None,\n    logger: Union[None, str, Logger, LoggerAdapter] = None,\n    error_formatter: ErrorFormatter = format_error,\n    execution_context_class: Optional[Type[ExecutionContext]] = None,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Configures the handler with options from the ASGI application."}),"\n",(0,t.jsx)(n.p,{children:"Called by Ariadne ASGI GraphQL application as part of its\ninitialization, propagating the configuration to it's handlers."}),"\n",(0,t.jsx)(n.h4,{id:"get_context_for_request",children:(0,t.jsx)(n.code,{children:"get_context_for_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def get_context_for_request(self, request: Any, data: dict) -> Any:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns GraphQL context value for ASGI connection."}),"\n",(0,t.jsxs)(n.p,{children:["Resolves final context value from the ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#contextvalue",children:(0,t.jsx)(n.code,{children:"ContextValue"})})," value passed to\n",(0,t.jsx)(n.code,{children:"context_value"})," option. If ",(0,t.jsx)(n.code,{children:"context_value"})," is None, sets default context\nvalue instead, which is a ",(0,t.jsx)(n.code,{children:"dict"})," with single ",(0,t.jsx)(n.code,{children:"request"})," key that contains\neither ",(0,t.jsx)(n.code,{children:"starlette.requests.Request"})," instance or\n",(0,t.jsx)(n.code,{children:"starlette.websockets.WebSocket"})," instance."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-13",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"request"}),": an instance of ASGI connection. It's type depends on handler."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"data"}),": a GraphQL data from connection."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"graphqlhttphandlerbase",children:(0,t.jsx)(n.code,{children:"GraphQLHttpHandlerBase"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class GraphQLHttpHandlerBase(GraphQLHandler):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Base class for ASGI HTTP connection handlers."}),"\n",(0,t.jsx)(n.h3,{id:"methods-2",children:"Methods"}),"\n",(0,t.jsx)(n.h4,{id:"handle_request-1",children:(0,t.jsx)(n.code,{children:"handle_request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_request(self, request: Any) -> Any:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Abstract method for handling the request."}),"\n",(0,t.jsx)(n.p,{children:"Should return valid ASGI response."}),"\n",(0,t.jsx)(n.h4,{id:"execute_graphql_query-1",children:(0,t.jsx)(n.code,{children:"execute_graphql_query"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def execute_graphql_query(\n    self,\n    request: Any,\n    data: Any,\n    *,\n    context_value: Optional[Any],\n    query_document: Optional[DocumentNode],\n) -> GraphQLResult:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Abstract method for GraphQL query execution."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"graphqltransportwshandler",children:(0,t.jsx)(n.code,{children:"GraphQLTransportWSHandler"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class GraphQLTransportWSHandler(GraphQLWebsocketHandler):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Implementation of the (newer) graphql-transport-ws subprotocol\nfrom the graphql-ws library."}),"\n",(0,t.jsx)(n.p,{children:"For more details see it's GH page:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/enisdenjo/graphql-ws/blob/master/PROTOCOL.md",children:"https://github.com/enisdenjo/graphql-ws/blob/master/PROTOCOL.md"})}),"\n",(0,t.jsx)(n.h3,{id:"constructor-2",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def __init__(\n    self,\n    *args,\n    connection_init_wait_timeout: timedelta,\n    **kwargs,\n):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initializes the websocket handler."}),"\n",(0,t.jsx)(n.h4,{id:"optional-arguments-2",children:"Optional arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"connection_init_wait_timeout"}),": a ",(0,t.jsx)(n.code,{children:"timedelta"})," with timeout for new\nwebsocket connections before first message is received. Defaults to\n60 seconds."]}),"\n",(0,t.jsx)(n.h3,{id:"methods-3",children:"Methods"}),"\n",(0,t.jsx)(n.h4,{id:"handle-2",children:(0,t.jsx)(n.code,{children:"handle"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle(self, scope: Scope, receive: Receive, send: Send) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"An entrypoint for the GraphQL WebSocket handler."}),"\n",(0,t.jsx)(n.p,{children:"This method is called by the Ariadne ASGI GraphQL application to handle\nthe websocket connections."}),"\n",(0,t.jsxs)(n.p,{children:["It creates the ",(0,t.jsx)(n.code,{children:"starlette.websockets.WebSocket"})," instance and calls\n",(0,t.jsx)(n.code,{children:"handle_websocket"})," method with it."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-14",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"scope"}),": The ",(0,t.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html#connection-scope",children:"connection scope"})," information, a dictionary that contains\nat least a type key specifying the protocol that is incoming."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"receive"}),": an awaitable callable that will yield a new event dictionary\nwhen one is available."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"send"}),": an awaitable callable taking a single event dictionary as a\npositional argument that will return once the send has been completed\nor the connection has been closed."]}),"\n",(0,t.jsx)(n.p,{children:"Details about the arguments and their usage are described in the\nASGI specification:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html",children:"https://asgi.readthedocs.io/en/latest/specs/main.html"})}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket",children:(0,t.jsx)(n.code,{children:"handle_websocket"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket(self, websocket: WebSocket) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handle GraphQL the WebSocket connection."}),"\n",(0,t.jsxs)(n.p,{children:["Is called by the ",(0,t.jsx)(n.code,{children:"handle"})," method and ",(0,t.jsx)(n.code,{children:"handle_websocket"})," method of the\nASGI GraphQL application."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-15",children:"Required arguments:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_connection_init_timeout",children:(0,t.jsx)(n.code,{children:"handle_connection_init_timeout"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_connection_init_timeout(\n    self,\n    websocket: WebSocket,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_message",children:(0,t.jsx)(n.code,{children:"handle_websocket_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_message(\n    self,\n    websocket: WebSocket,\n    message: dict,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handles new message from websocket connection."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-16",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"message"}),": a ",(0,t.jsx)(n.code,{children:"dict"})," with message payload."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"client_context"}),": a ",(0,t.jsx)(n.code,{children:"ClientContext"})," object with extra state of current\nwebsocket connection."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_connection_init_message",children:(0,t.jsx)(n.code,{children:"handle_websocket_connection_init_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_connection_init_message(\n    self,\n    websocket: WebSocket,\n    message: dict,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Handles ",(0,t.jsx)(n.code,{children:"connection_init"})," websocket message."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-17",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"message"}),": a ",(0,t.jsx)(n.code,{children:"dict"})," with message payload."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"client_context"}),": a ",(0,t.jsx)(n.code,{children:"ClientContext"})," object with extra state of current\nwebsocket connection."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_ping_message",children:(0,t.jsx)(n.code,{children:"handle_websocket_ping_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_ping_message(\n    self,\n    websocket: WebSocket,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Handles ",(0,t.jsx)(n.code,{children:"ping"})," websocket message, answering with ",(0,t.jsx)(n.code,{children:"pong"})," message."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-18",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"client_context"}),": a ",(0,t.jsx)(n.code,{children:"ClientContext"})," object with extra state of current\nwebsocket connection."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_pong_message",children:(0,t.jsx)(n.code,{children:"handle_websocket_pong_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_pong_message(\n    self,\n    websocket: WebSocket,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Handles ",(0,t.jsx)(n.code,{children:"pong"})," websocket message."]}),"\n",(0,t.jsxs)(n.p,{children:["Unlike ",(0,t.jsx)(n.code,{children:"ping"})," message, ",(0,t.jsx)(n.code,{children:"pong"})," is unidirectional heartbeat sent by the\nclient to the server. It doesn't require a result."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-19",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"client_context"}),": a ",(0,t.jsx)(n.code,{children:"ClientContext"})," object with extra state of current\nwebsocket connection."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_complete_message",children:(0,t.jsx)(n.code,{children:"handle_websocket_complete_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_complete_message(\n    self,\n    websocket: WebSocket,\n    operation_id: str,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Handles ",(0,t.jsx)(n.code,{children:"complete"})," websocket message."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"complete"})," message tells the GraphQL server to stop sending events for\nGraphQL operation specified in the message"]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-20",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"operation_id"}),": a ",(0,t.jsx)(n.code,{children:"str"})," with id of operation that should be stopped."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"client_context"}),": a ",(0,t.jsx)(n.code,{children:"ClientContext"})," object with extra state of current\nwebsocket connection."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_subscribe",children:(0,t.jsx)(n.code,{children:"handle_websocket_subscribe"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_subscribe(\n    self,\n    websocket: WebSocket,\n    data: Any,\n    operation_id: str,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Handles ",(0,t.jsx)(n.code,{children:"subscribe"})," websocket message."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-21",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"data"}),": any data from ",(0,t.jsx)(n.code,{children:"subscribe"})," message."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"operation_id"}),": a ",(0,t.jsx)(n.code,{children:"str"})," with id of new subscribe operation."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"client_context"}),": a ",(0,t.jsx)(n.code,{children:"ClientContext"})," object with extra state of current\nwebsocket connection."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_invalid_type",children:(0,t.jsx)(n.code,{children:"handle_websocket_invalid_type"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_invalid_type(self, websocket: WebSocket) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handles unsupported or invalid websocket message."}),"\n",(0,t.jsxs)(n.p,{children:["Closes open websocket connection with error code ",(0,t.jsx)(n.code,{children:"4400"}),"."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-22",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_on_complete",children:(0,t.jsx)(n.code,{children:"handle_on_complete"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_on_complete(\n    self,\n    websocket: WebSocket,\n    operation: Operation,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handles completed websocket operation."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-23",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#operation",children:(0,t.jsx)(n.code,{children:"operation"})}),": a completed ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#operation",children:(0,t.jsx)(n.code,{children:"Operation"})}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"stop_websocket_operation",children:(0,t.jsx)(n.code,{children:"stop_websocket_operation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def stop_websocket_operation(\n    self,\n    websocket: WebSocket,\n    operation_id: str,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Stops specified GraphQL operation for given connection and context."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-24",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"operation_id"}),": a ",(0,t.jsx)(n.code,{children:"str"})," with id of operation to stop."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"client_context"}),": a ",(0,t.jsx)(n.code,{children:"ClientContext"})," object with extra state of current\nwebsocket connection."]}),"\n",(0,t.jsx)(n.h4,{id:"observe_async_results",children:(0,t.jsx)(n.code,{children:"observe_async_results"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def observe_async_results(\n    self,\n    websocket: WebSocket,\n    results_producer: AsyncGenerator,\n    operation_id: str,\n    client_context: ClientContext,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Converts results from Ariadne's ",(0,t.jsx)(n.code,{children:"subscribe"})," generator into websocket\nmessages it next sends to the client."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-25",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"results_producer"}),": the ",(0,t.jsx)(n.code,{children:"AsyncGenerator"})," returned from Ariadne's\n",(0,t.jsx)(n.code,{children:"subscribe"})," function."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"operation_id"}),": a ",(0,t.jsx)(n.code,{children:"str"})," with id of operation."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"client_context"}),": a ",(0,t.jsx)(n.code,{children:"ClientContext"})," object with extra state of current\nwebsocket connection."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"graphqlwshandler",children:(0,t.jsx)(n.code,{children:"GraphQLWSHandler"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class GraphQLWSHandler(GraphQLWebsocketHandler):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Implementation of the (older) graphql-ws subprotocol from the\nsubscriptions-transport-ws library."}),"\n",(0,t.jsx)(n.p,{children:"For more details see it's GH page:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/apollographql/subscriptions-transport-ws/blob/master/PROTOCOL.md",children:"https://github.com/apollographql/subscriptions-transport-ws/blob/master/PROTOCOL.md"})}),"\n",(0,t.jsx)(n.h3,{id:"constructor-3",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def __init__(self, *args, keepalive: Optional[float], **kwargs):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initializes the websocket handler."}),"\n",(0,t.jsx)(n.h4,{id:"optional-arguments-3",children:"Optional arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"keepalive"}),": a ",(0,t.jsx)(n.code,{children:"float"})," with time frequency for sending the keep-alive\nmessages to clients with open websocket connections. ",(0,t.jsx)(n.code,{children:"1.0"})," is 1 second.\nIf set to ",(0,t.jsx)(n.code,{children:"None"})," or ",(0,t.jsx)(n.code,{children:"0"}),", no keep-alive messages are sent.\nDefaults to ",(0,t.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"methods-4",children:"Methods"}),"\n",(0,t.jsx)(n.h4,{id:"handle-3",children:(0,t.jsx)(n.code,{children:"handle"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle(self, scope: Scope, receive: Receive, send: Send) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"An entrypoint for the GraphQL WebSocket handler."}),"\n",(0,t.jsx)(n.p,{children:"This method is called by the Ariadne ASGI GraphQL application to handle\nthe websocket connections."}),"\n",(0,t.jsxs)(n.p,{children:["It creates the ",(0,t.jsx)(n.code,{children:"starlette.websockets.WebSocket"})," instance and calls\n",(0,t.jsx)(n.code,{children:"handle_websocket"})," method with it."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-26",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"scope"}),": The ",(0,t.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html#connection-scope",children:"connection scope"})," information, a dictionary that contains\nat least a type key specifying the protocol that is incoming."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"receive"}),": an awaitable callable that will yield a new event dictionary\nwhen one is available."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"send"}),": an awaitable callable taking a single event dictionary as a\npositional argument that will return once the send has been completed\nor the connection has been closed."]}),"\n",(0,t.jsx)(n.p,{children:"Details about the arguments and their usage are described in the\nASGI specification:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://asgi.readthedocs.io/en/latest/specs/main.html",children:"https://asgi.readthedocs.io/en/latest/specs/main.html"})}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket-1",children:(0,t.jsx)(n.code,{children:"handle_websocket"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket(self, websocket: WebSocket) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handle GraphQL the WebSocket connection."}),"\n",(0,t.jsxs)(n.p,{children:["Is called by the ",(0,t.jsx)(n.code,{children:"handle"})," method and ",(0,t.jsx)(n.code,{children:"handle_websocket"})," method of the\nASGI GraphQL application."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-27",children:"Required arguments:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_message-1",children:(0,t.jsx)(n.code,{children:"handle_websocket_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_message(\n    self,\n    websocket: WebSocket,\n    message: dict,\n    operations: Dict[str, Operation],\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handles new message from websocket connection."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-28",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"message"}),": a ",(0,t.jsx)(n.code,{children:"dict"})," with message payload."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"operations"}),": a ",(0,t.jsx)(n.code,{children:"dict"})," with currently active GraphQL operations."]}),"\n",(0,t.jsx)(n.h4,{id:"process_single_message",children:(0,t.jsx)(n.code,{children:"process_single_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def process_single_message(\n    self,\n    websocket: WebSocket,\n    data: Any,\n    operation_id: str,\n    operations: Dict[str, Operation],\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Processes websocket message containing new GraphQL operation."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-29",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"data"}),": a ",(0,t.jsx)(n.code,{children:"dict"})," with message's payload."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"operation_id"}),": a ",(0,t.jsx)(n.code,{children:"str"})," with an ID of new operation."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"operations"}),": a ",(0,t.jsx)(n.code,{children:"dict"})," with currently active GraphQL operations."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_connection_init_message-1",children:(0,t.jsx)(n.code,{children:"handle_websocket_connection_init_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_connection_init_message(\n    self,\n    websocket: WebSocket,\n    message: dict,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Handles ",(0,t.jsx)(n.code,{children:"connection_init"})," websocket message."]}),"\n",(0,t.jsx)(n.p,{children:"Initializes new websocket instance."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-30",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"message"}),": a ",(0,t.jsx)(n.code,{children:"dict"})," with message's payload."]}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket_connection_terminate_message",children:(0,t.jsx)(n.code,{children:"handle_websocket_connection_terminate_message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket_connection_terminate_message(\n    self,\n    websocket: WebSocket,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Handles ",(0,t.jsx)(n.code,{children:"terminate"})," websocket message."]}),"\n",(0,t.jsx)(n.p,{children:"Closes open websocket connection."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-31",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsx)(n.h4,{id:"keep_websocket_alive",children:(0,t.jsx)(n.code,{children:"keep_websocket_alive"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def keep_websocket_alive(self, websocket: WebSocket) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.h4,{id:"start_websocket_operation",children:(0,t.jsx)(n.code,{children:"start_websocket_operation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def start_websocket_operation(\n    self,\n    websocket: WebSocket,\n    data: Any,\n    context_value: Any,\n    query_document: DocumentNode,\n    operation_id: str,\n    operations: Dict[str, Operation],\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.h4,{id:"stop_websocket_operation-1",children:(0,t.jsx)(n.code,{children:"stop_websocket_operation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def stop_websocket_operation(\n    self,\n    websocket: WebSocket,\n    operation: Operation,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Stops specified GraphQL operation for given connection."}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-32",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#operation",children:(0,t.jsx)(n.code,{children:"operation"})}),": an ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#operation",children:(0,t.jsx)(n.code,{children:"Operation"})})," to stop."]}),"\n",(0,t.jsx)(n.h4,{id:"observe_async_results-1",children:(0,t.jsx)(n.code,{children:"observe_async_results"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def observe_async_results(\n    self,\n    websocket: WebSocket,\n    results: AsyncGenerator,\n    operation_id: str,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Converts results from Ariadne's ",(0,t.jsx)(n.code,{children:"subscribe"})," generator into websocket\nmessages it next sends to the client."]}),"\n",(0,t.jsx)(n.h5,{id:"required-arguments-33",children:"Required arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"websocket"}),": the ",(0,t.jsx)(n.code,{children:"WebSocket"})," instance from Starlette or FastAPI."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"results"}),": the ",(0,t.jsx)(n.code,{children:"AsyncGenerator"})," returned from Ariadne's\n",(0,t.jsx)(n.code,{children:"subscribe"})," function."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"operation_id"}),": a ",(0,t.jsx)(n.code,{children:"str"})," with id of operation."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"graphqlwebsockethandler",children:(0,t.jsx)(n.code,{children:"GraphQLWebsocketHandler"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class GraphQLWebsocketHandler(GraphQLHandler):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Base class for ASGI websocket connection handlers."}),"\n",(0,t.jsx)(n.h3,{id:"constructor-4",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def __init__(\n    self,\n    on_connect: Optional[OnConnect] = None,\n    on_disconnect: Optional[OnDisconnect] = None,\n    on_operation: Optional[OnOperation] = None,\n    on_complete: Optional[OnComplete] = None,\n):\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initialize websocket handler with optional options specific to it."}),"\n",(0,t.jsx)(n.h4,{id:"optional-arguments-4",children:"Optional arguments:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"on_connect"}),": an ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#onconnect",children:(0,t.jsx)(n.code,{children:"OnConnect"})})," callback used on new websocket connection."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"on_disconnect"}),": an ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#ondisconnect",children:(0,t.jsx)(n.code,{children:"OnDisconnect"})})," callback used when existing\nwebsocket connection is closed."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"on_operation"}),": an ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#onoperation",children:(0,t.jsx)(n.code,{children:"OnOperation"})})," callback, used when new GraphQL\noperation is received from websocket connection."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"on_complete"}),": an ",(0,t.jsx)(n.a,{href:"/server/0.23/types-reference#oncomplete",children:(0,t.jsx)(n.code,{children:"OnComplete"})})," callback, used when GraphQL operation\nreceived over the websocket connection was completed."]}),"\n",(0,t.jsx)(n.h3,{id:"methods-5",children:"Methods"}),"\n",(0,t.jsx)(n.h4,{id:"handle_websocket-2",children:(0,t.jsx)(n.code,{children:"handle_websocket"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"async def handle_websocket(self, websocket: Any) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Abstract method for handling the websocket connection."}),"\n",(0,t.jsx)(n.h4,{id:"configure-1",children:(0,t.jsx)(n.code,{children:"configure"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def configure(\n    self,\n    *args,\n    http_handler: Optional[GraphQLHttpHandlerBase],\n    **kwargs,\n) -> None:\n    ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Configures the handler with options from the ASGI application."}),"\n",(0,t.jsx)(n.p,{children:"Called by Ariadne ASGI GraphQL application as part of its\ninitialization, propagating the configuration to it's handlers."}),"\n",(0,t.jsx)(n.h5,{id:"optional-arguments-5",children:"Optional arguments"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"http_handler"}),": the ",(0,t.jsx)(n.code,{children:"GraphQLHttpHandlerBase"})," subclass instance to use\nto execute the ",(0,t.jsx)(n.code,{children:"Query"})," and ",(0,t.jsx)(n.code,{children:"Mutation"})," operations made over the\nwebsocket connections."]})]})}function h(e={}){let{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},84429:function(e,n,s){s.d(n,{R:()=>d,x:()=>i});var r=s(96540);let t={},c=r.createContext(t);function d(e){let n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);