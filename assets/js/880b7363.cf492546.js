"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["77627"],{61335:function(e,n,r){r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var i=r(3898),a=r(74848),t=r(84429);let o={title:"Ariadne 0.6.0"},s,l={authorsImageUrls:[]},d=[{value:"Extensions and middlewares",id:"extensions-and-middlewares",level:2},{value:"Apollo tracing and OpenTracing monitoring extensions.",id:"apollo-tracing-and-opentracing-monitoring-extensions",level:2},{value:"CHANGELOG",id:"changelog",level:2}];function c(e){let n={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Ariadne 0.6 is now available, bringing bug fixes, extensions and support for application performance monitoring."}),"\n",(0,a.jsx)(n.h2,{id:"extensions-and-middlewares",children:"Extensions and middlewares"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/server/extensions",children:"Extensions support"})," is now available. Extensions can be used to add custom monitoring to the API, as well as inject custom logic into query execution process."]}),"\n",(0,a.jsxs)(n.p,{children:["0.6 also formalizes our support for the ",(0,a.jsx)(n.a,{href:"/server/middleware",children:"GraphQL middlewares"}),", which enable developers to wrap resolvers used by server with custom logic."]}),"\n",(0,a.jsx)(n.p,{children:"Extensions are only available in GraphQL servers running over the ASGI, but middlewares are supported by both ASGI and WSGI servers."}),"\n",(0,a.jsx)(n.h2,{id:"apollo-tracing-and-opentracing-monitoring-extensions",children:"Apollo tracing and OpenTracing monitoring extensions."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ariadne.contrib.tracing"})," package has been added to the library that provides extensions for easy enabling application performance metrics in GraphQL Server."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/server/apollo-tracing",children:"Apollo tracing"})," extension adds query's trace data to the results JSON. This data can then be viewed using the ",(0,a.jsx)(n.code,{children:"TRACE"})," option in GraphQL Playground."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/server/open-tracing",children:"OpenTracing"})," extension can be used to monitor GraphQL API for performance and errors using popular APM tools like ",(0,a.jsx)(n.a,{href:"https://www.jaegertracing.io",children:"Jaeger"})," or ",(0,a.jsx)(n.a,{href:"https://www.datadoghq.com/",children:"Datadog"}),":"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"GraphQL query traced in Jaeger",src:r(22649).A+"",width:"1331",height:"734"})}),"\n",(0,a.jsx)(n.h2,{id:"changelog",children:"CHANGELOG"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Updated ",(0,a.jsx)(n.code,{children:"graphql-core-next"})," to 1.1.1 which has feature parity with GraphQL.js 14.4.0."]}),"\n",(0,a.jsxs)(n.li,{children:["Added basic extensions system to the ",(0,a.jsx)(n.code,{children:"ariadne.graphql.graphql"}),". Currently only available in the ",(0,a.jsx)(n.code,{children:"ariadne.asgi.GraphQL"})," app."]}),"\n",(0,a.jsxs)(n.li,{children:["Added ",(0,a.jsx)(n.code,{children:"convert_kwargs_to_snake_case"})," utility decorator that recursively converts the case of arguments passed to resolver from ",(0,a.jsx)(n.code,{children:"camelCase"})," to ",(0,a.jsx)(n.code,{children:"snake_case"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Removed ",(0,a.jsx)(n.code,{children:"default_resolver"})," and replaced its uses in library with ",(0,a.jsx)(n.code,{children:"graphql.default_field_resolver"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Resolver returned by ",(0,a.jsx)(n.code,{children:"resolve_to"})," util follows ",(0,a.jsx)(n.code,{children:"graphql.default_field_resolver"})," behaviour and supports resolving to callables."]}),"\n",(0,a.jsxs)(n.li,{children:["Added ",(0,a.jsx)(n.code,{children:"is_default_resolver"})," utility for checking if resolver function is ",(0,a.jsx)(n.code,{children:"graphql.default_field_resolver"}),", resolver created with ",(0,a.jsx)(n.code,{children:"resolve_to"})," or ",(0,a.jsx)(n.code,{children:"alias"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Added ",(0,a.jsx)(n.code,{children:"ariadne.contrib.tracing"})," package with ",(0,a.jsx)(n.code,{children:"ApolloTracingExtension"})," and ",(0,a.jsx)(n.code,{children:"OpenTracingExtension"})," GraphQL extensions for adding Apollo tracing and OpenTracing monitoring to the API (ASGI only)."]}),"\n",(0,a.jsx)(n.li,{children:"Updated ASGI app disconnection handler to also check client connection state."}),"\n",(0,a.jsxs)(n.li,{children:["Fixed ASGI app ",(0,a.jsx)(n.code,{children:"context_value"})," option support for async callables."]}),"\n",(0,a.jsxs)(n.li,{children:["Updated ",(0,a.jsx)(n.code,{children:"middleware"})," option implementation in ASGI and WSGI apps to accept list of middleware functions or callable returning those."]}),"\n",(0,a.jsxs)(n.li,{children:["Moved error formatting utils (",(0,a.jsx)(n.code,{children:"get_formatted_error_context"}),", ",(0,a.jsx)(n.code,{children:"get_formatted_error_traceback"}),", ",(0,a.jsx)(n.code,{children:"unwrap_graphql_error"}),") to public API."]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},22649:function(e,n,r){r.d(n,{A:()=>i});let i=r.p+"assets/images/open-tracing-f0ac719be7f81dc8d105fa2b597dffca.png"},84429:function(e,n,r){r.d(n,{R:()=>o,x:()=>s});var i=r(96540);let a={},t=i.createContext(a);function o(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},3898:function(e){e.exports=JSON.parse('{"permalink":"/blog/2019/08/12/ariadne-0-6-0","source":"@site/blog/2019-08-12-ariadne-0-6-0.md","title":"Ariadne 0.6.0","description":"Ariadne 0.6 is now available, bringing bug fixes, extensions and support for application performance monitoring.","date":"2019-08-12T00:00:00.000Z","tags":[],"readingTime":1.68,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Ariadne 0.6.0"},"unlisted":false,"prevItem":{"title":"Ariadne 0.7.0","permalink":"/blog/2019/10/03/ariadne-0-7-0"},"nextItem":{"title":"Ariadne 0.5.0","permalink":"/blog/2019/06/07/ariadne-0-5-0"}}')}}]);