"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["13049"],{83602:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>o,toc:()=>a,default:()=>c,metadata:()=>s,assets:()=>d,contentTitle:()=>l});var s=JSON.parse('{"id":"hiding-field-suggestions","title":"Hiding field suggestions","description":"Field suggestion","source":"@site/server_versioned_docs/version-0.22/hiding-field-suggestions.md","sourceDirName":".","slug":"/hiding-field-suggestions","permalink":"/server/0.22/hiding-field-suggestions","draft":false,"unlisted":false,"tags":[],"version":"0.22","frontMatter":{"id":"hiding-field-suggestions","title":"Hiding field suggestions","sidebar_label":"Hiding field suggestions"},"sidebar":"tutorialSidebar","previous":{"title":"Security Overview","permalink":"/server/0.22/security-overview"},"next":{"title":"Disabling stack traces","permalink":"/server/0.22/disabling-stack-traces"}}'),t=i(74848),r=i(84429);let o={id:"hiding-field-suggestions",title:"Hiding field suggestions",sidebar_label:"Hiding field suggestions"},l,d={},a=[{value:"Field suggestion",id:"field-suggestion",level:2},{value:"Description",id:"description",level:3},{value:"Disabling field suggestions",id:"disabling-field-suggestions",level:3}];function g(e){let n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"field-suggestion",children:"Field suggestion"}),"\n",(0,t.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"The introduction of this feature has enabled the correction of typos in GraphQL requests. It can be employed to infer an introspection schema, even when the latter is closed."}),"\n",(0,t.jsx)(n.p,{children:"It is therefore recommended to always disable field suggestion, particularly when introspection has been disabled on the application."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"query { me { od } }\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "error": {\n    "errors": [\n      {\n        "message": "Cannot query field \'od\' on type \'User\'. Did you mean \'id\'?",\n        "locations": [\n          {\n            "line": 3,\n            "column": 5\n          }\n        ],\n        "extensions": {\n          "exception": null\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"disabling-field-suggestions",children:"Disabling field suggestions"}),"\n",(0,t.jsx)(n.p,{children:"The following code presents an error formatter for that will filter out the suggestions."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def hide_field_suggestion_fmt(error: GraphQLError, debug: bool = False) -> dict:\n    formatted = error.formatted\n    formatted["message"] = re.sub(r"Did you mean.*", "", formatted["message"])\n    return formatted\n\nschema = make_executable_schema(type_defs, query)\napp = GraphQL(schema, error_formatter=hide_field_suggestion_fmt)\n'})})]})}function c(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},84429:function(e,n,i){i.d(n,{R:()=>o,x:()=>l});var s=i(96540);let t={},r=s.createContext(t);function o(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);